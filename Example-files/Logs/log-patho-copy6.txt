EDSR(
  (sub_mean): MeanShift(3, 3, kernel_size=(1, 1), stride=(1, 1))
  (add_mean): MeanShift(3, 3, kernel_size=(1, 1), stride=(1, 1))
  (head): Sequential(
    (0): Conv2d(3, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  )
  (body): Sequential(
    (0): ResBlock(
      (body): Sequential(
        (0): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (1): ReLU(inplace=True)
        (2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      )
    )
    (1): ResBlock(
      (body): Sequential(
        (0): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (1): ReLU(inplace=True)
        (2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      )
    )
    (2): ResBlock(
      (body): Sequential(
        (0): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (1): ReLU(inplace=True)
        (2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      )
    )
    (3): ResBlock(
      (body): Sequential(
        (0): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (1): ReLU(inplace=True)
        (2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      )
    )
    (4): ResBlock(
      (body): Sequential(
        (0): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (1): ReLU(inplace=True)
        (2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      )
    )
    (5): ResBlock(
      (body): Sequential(
        (0): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (1): ReLU(inplace=True)
        (2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      )
    )
    (6): ResBlock(
      (body): Sequential(
        (0): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (1): ReLU(inplace=True)
        (2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      )
    )
    (7): ResBlock(
      (body): Sequential(
        (0): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (1): ReLU(inplace=True)
        (2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      )
    )
    (8): ResBlock(
      (body): Sequential(
        (0): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (1): ReLU(inplace=True)
        (2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      )
    )
    (9): ResBlock(
      (body): Sequential(
        (0): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (1): ReLU(inplace=True)
        (2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      )
    )
    (10): ResBlock(
      (body): Sequential(
        (0): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (1): ReLU(inplace=True)
        (2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      )
    )
    (11): ResBlock(
      (body): Sequential(
        (0): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (1): ReLU(inplace=True)
        (2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      )
    )
    (12): ResBlock(
      (body): Sequential(
        (0): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (1): ReLU(inplace=True)
        (2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      )
    )
    (13): ResBlock(
      (body): Sequential(
        (0): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (1): ReLU(inplace=True)
        (2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      )
    )
    (14): ResBlock(
      (body): Sequential(
        (0): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (1): ReLU(inplace=True)
        (2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      )
    )
    (15): ResBlock(
      (body): Sequential(
        (0): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (1): ReLU(inplace=True)
        (2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      )
    )
    (16): ResBlock(
      (body): Sequential(
        (0): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (1): ReLU(inplace=True)
        (2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      )
    )
    (17): ResBlock(
      (body): Sequential(
        (0): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (1): ReLU(inplace=True)
        (2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      )
    )
    (18): ResBlock(
      (body): Sequential(
        (0): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (1): ReLU(inplace=True)
        (2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      )
    )
    (19): ResBlock(
      (body): Sequential(
        (0): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (1): ReLU(inplace=True)
        (2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      )
    )
    (20): ResBlock(
      (body): Sequential(
        (0): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (1): ReLU(inplace=True)
        (2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      )
    )
    (21): ResBlock(
      (body): Sequential(
        (0): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (1): ReLU(inplace=True)
        (2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      )
    )
    (22): ResBlock(
      (body): Sequential(
        (0): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (1): ReLU(inplace=True)
        (2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      )
    )
    (23): ResBlock(
      (body): Sequential(
        (0): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (1): ReLU(inplace=True)
        (2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      )
    )
    (24): ResBlock(
      (body): Sequential(
        (0): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (1): ReLU(inplace=True)
        (2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      )
    )
    (25): ResBlock(
      (body): Sequential(
        (0): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (1): ReLU(inplace=True)
        (2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      )
    )
    (26): ResBlock(
      (body): Sequential(
        (0): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (1): ReLU(inplace=True)
        (2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      )
    )
    (27): ResBlock(
      (body): Sequential(
        (0): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (1): ReLU(inplace=True)
        (2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      )
    )
    (28): ResBlock(
      (body): Sequential(
        (0): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (1): ReLU(inplace=True)
        (2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      )
    )
    (29): ResBlock(
      (body): Sequential(
        (0): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (1): ReLU(inplace=True)
        (2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      )
    )
    (30): ResBlock(
      (body): Sequential(
        (0): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (1): ReLU(inplace=True)
        (2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      )
    )
    (31): ResBlock(
      (body): Sequential(
        (0): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (1): ReLU(inplace=True)
        (2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      )
    )
    (32): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  )
  (tail): Sequential(
    (0): Upsampler(
      (0): Conv2d(256, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (1): PixelShuffle(upscale_factor=2)
      (2): Conv2d(256, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (3): PixelShuffle(upscale_factor=2)
    )
    (1): Conv2d(256, 3, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  )
)
[Epoch 1]	Learning rate: 1.00e-4
[1600/2400]	[L1: 13.0656]	182.8+286.7s

Evaluation:
[Custom x4]	PSNR: 22.752 (Best: 22.752 @epoch 1)
Forward: 142.44s

Saving...
Total: 143.51s

[Epoch 2]	Learning rate: 1.00e-4
[1600/2400]	[L1: 13.0352]	181.8+287.1s

Evaluation:
[Custom x4]	PSNR: 22.765 (Best: 22.765 @epoch 2)
Forward: 142.43s

Saving...
Total: 143.64s

[Epoch 3]	Learning rate: 1.00e-4
[1600/2400]	[L1: 12.8802]	181.8+287.0s

Evaluation:
[Custom x4]	PSNR: 22.747 (Best: 22.765 @epoch 2)
Forward: 142.48s

Saving...
Total: 143.54s

[Epoch 4]	Learning rate: 1.00e-4
[1600/2400]	[L1: 13.1454]	181.8+287.1s

Evaluation:
[Custom x4]	PSNR: 22.755 (Best: 22.765 @epoch 2)
Forward: 142.48s

Saving...
Total: 143.48s

[Epoch 5]	Learning rate: 1.00e-4
[1600/2400]	[L1: 13.0793]	181.8+287.1s

Evaluation:
[Custom x4]	PSNR: 22.770 (Best: 22.770 @epoch 5)
Forward: 142.47s

Saving...
Total: 143.83s

[Epoch 6]	Learning rate: 1.00e-4
[1600/2400]	[L1: 12.9545]	181.8+287.1s

Evaluation:
[Custom x4]	PSNR: 22.764 (Best: 22.770 @epoch 5)
Forward: 142.48s

Saving...
Total: 143.42s

[Epoch 7]	Learning rate: 1.00e-4
[1600/2400]	[L1: 12.9402]	181.8+287.2s

Evaluation:
[Custom x4]	PSNR: 22.767 (Best: 22.770 @epoch 5)
Forward: 142.47s

Saving...
Total: 143.39s

[Epoch 8]	Learning rate: 1.00e-4
[1600/2400]	[L1: 12.9972]	181.9+287.2s

Evaluation:
[Custom x4]	PSNR: 22.749 (Best: 22.770 @epoch 5)
Forward: 142.52s

Saving...
Total: 143.55s

[Epoch 9]	Learning rate: 1.00e-4
[1600/2400]	[L1: 12.9370]	182.4+287.6s

Evaluation:
[Custom x4]	PSNR: 22.770 (Best: 22.770 @epoch 9)
Forward: 142.50s

Saving...
Total: 143.68s

[Epoch 10]	Learning rate: 1.00e-4
[1600/2400]	[L1: 12.8104]	182.4+287.7s

Evaluation:
[Custom x4]	PSNR: 22.740 (Best: 22.770 @epoch 9)
Forward: 142.50s

Saving...
Total: 143.61s

[Epoch 11]	Learning rate: 1.00e-4
[1600/2400]	[L1: 12.9900]	181.9+287.2s

Evaluation:
[Custom x4]	PSNR: 22.762 (Best: 22.770 @epoch 9)
Forward: 142.51s

Saving...
Total: 143.44s

[Epoch 12]	Learning rate: 1.00e-4
[1600/2400]	[L1: 13.0027]	181.9+287.2s

Evaluation:
[Custom x4]	PSNR: 22.775 (Best: 22.775 @epoch 12)
Forward: 142.52s

Saving...
Total: 143.70s

[Epoch 13]	Learning rate: 1.00e-4
[1600/2400]	[L1: 12.9663]	181.9+287.2s

Evaluation:
[Custom x4]	PSNR: 22.764 (Best: 22.775 @epoch 12)
Forward: 142.46s

Saving...
Total: 143.41s

[Epoch 14]	Learning rate: 1.00e-4
[1600/2400]	[L1: 12.9452]	181.8+287.2s

Evaluation:
[Custom x4]	PSNR: 22.763 (Best: 22.775 @epoch 12)
Forward: 142.50s

Saving...
Total: 143.57s

[Epoch 15]	Learning rate: 1.00e-4
[1600/2400]	[L1: 12.9558]	181.8+287.2s

Evaluation:
[Custom x4]	PSNR: 22.728 (Best: 22.775 @epoch 12)
Forward: 142.54s

Saving...
Total: 143.72s

[Epoch 16]	Learning rate: 1.00e-4
[1600/2400]	[L1: 12.9845]	181.9+287.4s

Evaluation:
[Custom x4]	PSNR: 22.763 (Best: 22.775 @epoch 12)
Forward: 142.49s

Saving...
Total: 143.43s

[Epoch 17]	Learning rate: 1.00e-4
[1600/2400]	[L1: 12.8309]	181.9+287.2s

Evaluation:
[Custom x4]	PSNR: 22.772 (Best: 22.775 @epoch 12)
Forward: 142.52s

Saving...
Total: 143.57s

[Epoch 18]	Learning rate: 1.00e-4
[1600/2400]	[L1: 12.9545]	181.9+287.3s

Evaluation:
[Custom x4]	PSNR: 22.730 (Best: 22.775 @epoch 12)
Forward: 142.55s

Saving...
Total: 143.48s

[Epoch 19]	Learning rate: 1.00e-4
[1600/2400]	[L1: 12.8969]	181.9+287.2s

Evaluation:
[Custom x4]	PSNR: 22.749 (Best: 22.775 @epoch 12)
Forward: 142.52s

Saving...
Total: 143.45s

[Epoch 20]	Learning rate: 1.00e-4
[1600/2400]	[L1: 12.9051]	181.9+287.3s

Evaluation:
[Custom x4]	PSNR: 22.739 (Best: 22.775 @epoch 12)
Forward: 142.55s

Saving...
Total: 143.67s

[Epoch 21]	Learning rate: 1.00e-4
[1600/2400]	[L1: 13.0121]	182.3+287.6s

Evaluation:
[Custom x4]	PSNR: 22.748 (Best: 22.775 @epoch 12)
Forward: 142.54s

Saving...
Total: 143.48s

[Epoch 22]	Learning rate: 1.00e-4
[1600/2400]	[L1: 12.8986]	182.4+287.7s

Evaluation:
[Custom x4]	PSNR: 22.747 (Best: 22.775 @epoch 12)
Forward: 142.56s

Saving...
Total: 143.49s

[Epoch 23]	Learning rate: 1.00e-4
[1600/2400]	[L1: 12.8070]	182.1+287.4s

Evaluation:
[Custom x4]	PSNR: 22.736 (Best: 22.775 @epoch 12)
Forward: 142.45s

Saving...
Total: 143.37s

[Epoch 24]	Learning rate: 1.00e-4
[1600/2400]	[L1: 13.0011]	181.9+287.4s

Evaluation:
[Custom x4]	PSNR: 22.734 (Best: 22.775 @epoch 12)
Forward: 142.52s

Saving...
Total: 143.52s

[Epoch 25]	Learning rate: 1.00e-4
[1600/2400]	[L1: 12.8043]	181.9+287.4s

Evaluation:
[Custom x4]	PSNR: 22.737 (Best: 22.775 @epoch 12)
Forward: 142.51s

Saving...
Total: 143.69s

[Epoch 26]	Learning rate: 1.00e-4
[1600/2400]	[L1: 12.7150]	181.9+287.4s

Evaluation:
[Custom x4]	PSNR: 22.729 (Best: 22.775 @epoch 12)
Forward: 142.54s

Saving...
Total: 143.46s

[Epoch 27]	Learning rate: 1.00e-4
[1600/2400]	[L1: 12.9327]	181.9+287.4s

Evaluation:
[Custom x4]	PSNR: 22.713 (Best: 22.775 @epoch 12)
Forward: 142.56s

Saving...
Total: 143.48s

[Epoch 28]	Learning rate: 1.00e-4
[1600/2400]	[L1: 12.8697]	182.0+287.4s

Evaluation:
[Custom x4]	PSNR: 22.731 (Best: 22.775 @epoch 12)
Forward: 142.59s

Saving...
Total: 143.51s

[Epoch 29]	Learning rate: 1.00e-4
[1600/2400]	[L1: 12.9627]	181.9+287.4s

Evaluation:
[Custom x4]	PSNR: 22.730 (Best: 22.775 @epoch 12)
Forward: 142.65s

Saving...
Total: 143.58s

[Epoch 30]	Learning rate: 1.00e-4
[1600/2400]	[L1: 12.8047]	181.9+287.5s

Evaluation:
[Custom x4]	PSNR: 22.701 (Best: 22.775 @epoch 12)
Forward: 142.53s

Saving...
Total: 143.63s

[Epoch 31]	Learning rate: 1.00e-4
[1600/2400]	[L1: 12.8716]	181.9+287.3s

Evaluation:
[Custom x4]	PSNR: 22.707 (Best: 22.775 @epoch 12)
Forward: 142.54s

Saving...
Total: 143.47s

[Epoch 32]	Learning rate: 1.00e-4
[1600/2400]	[L1: 12.7466]	181.9+287.3s

Evaluation:
[Custom x4]	PSNR: 22.705 (Best: 22.775 @epoch 12)
Forward: 142.52s

Saving...
Total: 143.45s

[Epoch 33]	Learning rate: 1.00e-4
[1600/2400]	[L1: 12.8482]	181.9+287.4s

Evaluation:
[Custom x4]	PSNR: 22.719 (Best: 22.775 @epoch 12)
Forward: 142.56s

Saving...
Total: 143.50s

[Epoch 34]	Learning rate: 1.00e-4
[1600/2400]	[L1: 12.9019]	182.5+287.8s

Evaluation:
[Custom x4]	PSNR: 22.719 (Best: 22.775 @epoch 12)
Forward: 142.54s

Saving...
Total: 143.49s

[Epoch 35]	Learning rate: 1.00e-4
[1600/2400]	[L1: 12.9618]	182.5+287.8s

Evaluation:
[Custom x4]	PSNR: 22.695 (Best: 22.775 @epoch 12)
Forward: 142.56s

Saving...
Total: 143.77s

[Epoch 36]	Learning rate: 1.00e-4
[1600/2400]	[L1: 12.7952]	181.9+287.4s

Evaluation:
[Custom x4]	PSNR: 22.694 (Best: 22.775 @epoch 12)
Forward: 142.53s

Saving...
Total: 143.63s

[Epoch 37]	Learning rate: 1.00e-4
[1600/2400]	[L1: 12.8299]	182.0+287.4s

Evaluation:
[Custom x4]	PSNR: 22.714 (Best: 22.775 @epoch 12)
Forward: 142.57s

Saving...
Total: 143.52s

[Epoch 38]	Learning rate: 1.00e-4
[1600/2400]	[L1: 12.8110]	182.0+287.4s

Evaluation:
[Custom x4]	PSNR: 22.709 (Best: 22.775 @epoch 12)
Forward: 142.52s

Saving...
Total: 143.48s

[Epoch 39]	Learning rate: 1.00e-4
[1600/2400]	[L1: 12.8064]	182.0+287.5s

Evaluation:
[Custom x4]	PSNR: 22.689 (Best: 22.775 @epoch 12)
Forward: 142.57s

Saving...
Total: 143.51s

[Epoch 40]	Learning rate: 1.00e-4
[1600/2400]	[L1: 12.8676]	181.9+287.3s

Evaluation:
[Custom x4]	PSNR: 22.704 (Best: 22.775 @epoch 12)
Forward: 142.48s

Saving...
Total: 143.60s

