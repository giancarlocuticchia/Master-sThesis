EDSR(
  (sub_mean): MeanShift(3, 3, kernel_size=(1, 1), stride=(1, 1))
  (add_mean): MeanShift(3, 3, kernel_size=(1, 1), stride=(1, 1))
  (head): Sequential(
    (0): Conv2d(3, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  )
  (body): Sequential(
    (0): ResBlock(
      (body): Sequential(
        (0): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (1): ReLU(inplace=True)
        (2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      )
    )
    (1): ResBlock(
      (body): Sequential(
        (0): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (1): ReLU(inplace=True)
        (2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      )
    )
    (2): ResBlock(
      (body): Sequential(
        (0): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (1): ReLU(inplace=True)
        (2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      )
    )
    (3): ResBlock(
      (body): Sequential(
        (0): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (1): ReLU(inplace=True)
        (2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      )
    )
    (4): ResBlock(
      (body): Sequential(
        (0): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (1): ReLU(inplace=True)
        (2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      )
    )
    (5): ResBlock(
      (body): Sequential(
        (0): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (1): ReLU(inplace=True)
        (2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      )
    )
    (6): ResBlock(
      (body): Sequential(
        (0): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (1): ReLU(inplace=True)
        (2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      )
    )
    (7): ResBlock(
      (body): Sequential(
        (0): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (1): ReLU(inplace=True)
        (2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      )
    )
    (8): ResBlock(
      (body): Sequential(
        (0): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (1): ReLU(inplace=True)
        (2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      )
    )
    (9): ResBlock(
      (body): Sequential(
        (0): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (1): ReLU(inplace=True)
        (2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      )
    )
    (10): ResBlock(
      (body): Sequential(
        (0): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (1): ReLU(inplace=True)
        (2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      )
    )
    (11): ResBlock(
      (body): Sequential(
        (0): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (1): ReLU(inplace=True)
        (2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      )
    )
    (12): ResBlock(
      (body): Sequential(
        (0): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (1): ReLU(inplace=True)
        (2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      )
    )
    (13): ResBlock(
      (body): Sequential(
        (0): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (1): ReLU(inplace=True)
        (2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      )
    )
    (14): ResBlock(
      (body): Sequential(
        (0): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (1): ReLU(inplace=True)
        (2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      )
    )
    (15): ResBlock(
      (body): Sequential(
        (0): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (1): ReLU(inplace=True)
        (2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      )
    )
    (16): ResBlock(
      (body): Sequential(
        (0): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (1): ReLU(inplace=True)
        (2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      )
    )
    (17): ResBlock(
      (body): Sequential(
        (0): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (1): ReLU(inplace=True)
        (2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      )
    )
    (18): ResBlock(
      (body): Sequential(
        (0): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (1): ReLU(inplace=True)
        (2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      )
    )
    (19): ResBlock(
      (body): Sequential(
        (0): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (1): ReLU(inplace=True)
        (2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      )
    )
    (20): ResBlock(
      (body): Sequential(
        (0): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (1): ReLU(inplace=True)
        (2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      )
    )
    (21): ResBlock(
      (body): Sequential(
        (0): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (1): ReLU(inplace=True)
        (2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      )
    )
    (22): ResBlock(
      (body): Sequential(
        (0): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (1): ReLU(inplace=True)
        (2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      )
    )
    (23): ResBlock(
      (body): Sequential(
        (0): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (1): ReLU(inplace=True)
        (2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      )
    )
    (24): ResBlock(
      (body): Sequential(
        (0): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (1): ReLU(inplace=True)
        (2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      )
    )
    (25): ResBlock(
      (body): Sequential(
        (0): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (1): ReLU(inplace=True)
        (2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      )
    )
    (26): ResBlock(
      (body): Sequential(
        (0): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (1): ReLU(inplace=True)
        (2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      )
    )
    (27): ResBlock(
      (body): Sequential(
        (0): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (1): ReLU(inplace=True)
        (2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      )
    )
    (28): ResBlock(
      (body): Sequential(
        (0): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (1): ReLU(inplace=True)
        (2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      )
    )
    (29): ResBlock(
      (body): Sequential(
        (0): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (1): ReLU(inplace=True)
        (2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      )
    )
    (30): ResBlock(
      (body): Sequential(
        (0): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (1): ReLU(inplace=True)
        (2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      )
    )
    (31): ResBlock(
      (body): Sequential(
        (0): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (1): ReLU(inplace=True)
        (2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      )
    )
    (32): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  )
  (tail): Sequential(
    (0): Upsampler(
      (0): Conv2d(256, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (1): PixelShuffle(upscale_factor=2)
      (2): Conv2d(256, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (3): PixelShuffle(upscale_factor=2)
    )
    (1): Conv2d(256, 3, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  )
)
[Epoch 1]	Learning rate: 1.00e-4
[1600/2400]	[L1: 7.6554]	182.9+286.6s

Evaluation:
[Custom x4]	PSNR: 25.823 (Best: 25.823 @epoch 1)
Forward: 142.40s

Saving...
Total: 143.56s

[Epoch 2]	Learning rate: 1.00e-4
[1600/2400]	[L1: 7.6105]	181.9+286.8s

Evaluation:
[Custom x4]	PSNR: 25.832 (Best: 25.832 @epoch 2)
Forward: 142.46s

Saving...
Total: 143.63s

[Epoch 3]	Learning rate: 1.00e-4
[1600/2400]	[L1: 7.6046]	181.9+286.9s

Evaluation:
[Custom x4]	PSNR: 25.816 (Best: 25.832 @epoch 2)
Forward: 142.53s

Saving...
Total: 143.56s

[Epoch 4]	Learning rate: 1.00e-4
[1600/2400]	[L1: 7.6246]	182.0+287.0s

Evaluation:
[Custom x4]	PSNR: 25.825 (Best: 25.832 @epoch 2)
Forward: 142.53s

Saving...
Total: 143.52s

[Epoch 5]	Learning rate: 1.00e-4
[1600/2400]	[L1: 7.6040]	182.0+287.0s

Evaluation:
[Custom x4]	PSNR: 25.837 (Best: 25.837 @epoch 5)
Forward: 142.55s

Saving...
Total: 144.10s

[Epoch 6]	Learning rate: 1.00e-4
[1600/2400]	[L1: 7.6998]	182.0+286.9s

Evaluation:
[Custom x4]	PSNR: 25.827 (Best: 25.837 @epoch 5)
Forward: 142.56s

Saving...
Total: 143.61s

[Epoch 7]	Learning rate: 1.00e-4
[1600/2400]	[L1: 7.6194]	182.0+287.0s

Evaluation:
[Custom x4]	PSNR: 25.826 (Best: 25.837 @epoch 5)
Forward: 142.48s

Saving...
Total: 143.45s

[Epoch 8]	Learning rate: 1.00e-4
[1600/2400]	[L1: 7.4902]	182.4+287.3s

Evaluation:
[Custom x4]	PSNR: 25.821 (Best: 25.837 @epoch 5)
Forward: 142.48s

Saving...
Total: 143.42s

[Epoch 9]	Learning rate: 1.00e-4
[1600/2400]	[L1: 7.6194]	182.5+287.2s

Evaluation:
[Custom x4]	PSNR: 25.824 (Best: 25.837 @epoch 5)
Forward: 142.48s

Saving...
Total: 143.47s

[Epoch 10]	Learning rate: 1.00e-4
[1600/2400]	[L1: 7.5010]	181.9+286.9s

Evaluation:
[Custom x4]	PSNR: 25.832 (Best: 25.837 @epoch 5)
Forward: 142.48s

Saving...
Total: 143.58s

[Epoch 11]	Learning rate: 1.00e-4
[1600/2400]	[L1: 7.6055]	181.9+287.0s

Evaluation:
[Custom x4]	PSNR: 25.838 (Best: 25.838 @epoch 11)
Forward: 142.50s

Saving...
Total: 143.64s

[Epoch 12]	Learning rate: 1.00e-4
[1600/2400]	[L1: 7.5269]	182.0+287.0s

Evaluation:
[Custom x4]	PSNR: 25.843 (Best: 25.843 @epoch 12)
Forward: 142.52s

Saving...
Total: 143.67s

[Epoch 13]	Learning rate: 1.00e-4
[1600/2400]	[L1: 7.5506]	182.0+287.0s

Evaluation:
[Custom x4]	PSNR: 25.824 (Best: 25.843 @epoch 12)
Forward: 142.55s

Saving...
Total: 143.47s

[Epoch 14]	Learning rate: 1.00e-4
[1600/2400]	[L1: 7.5346]	181.9+287.0s

Evaluation:
[Custom x4]	PSNR: 25.820 (Best: 25.843 @epoch 12)
Forward: 142.52s

Saving...
Total: 143.45s

[Epoch 15]	Learning rate: 1.00e-4
[1600/2400]	[L1: 7.5706]	181.9+287.0s

Evaluation:
[Custom x4]	PSNR: 25.825 (Best: 25.843 @epoch 12)
Forward: 142.49s

Saving...
Total: 143.59s

[Epoch 16]	Learning rate: 1.00e-4
[1600/2400]	[L1: 7.5163]	182.0+287.0s

Evaluation:
[Custom x4]	PSNR: 25.825 (Best: 25.843 @epoch 12)
Forward: 142.50s

Saving...
Total: 143.53s

[Epoch 17]	Learning rate: 1.00e-4
[1600/2400]	[L1: 7.5021]	182.0+287.0s

Evaluation:
[Custom x4]	PSNR: 25.833 (Best: 25.843 @epoch 12)
Forward: 142.49s

Saving...
Total: 143.48s

[Epoch 18]	Learning rate: 1.00e-4
[1600/2400]	[L1: 7.5561]	182.0+287.0s

Evaluation:
[Custom x4]	PSNR: 25.824 (Best: 25.843 @epoch 12)
Forward: 142.55s

Saving...
Total: 143.58s

[Epoch 19]	Learning rate: 1.00e-4
[1600/2400]	[L1: 7.5013]	182.0+287.1s

Evaluation:
[Custom x4]	PSNR: 25.827 (Best: 25.843 @epoch 12)
Forward: 142.55s

Saving...
Total: 143.60s

[Epoch 20]	Learning rate: 1.00e-4
[1600/2400]	[L1: 7.5003]	182.2+287.2s

Evaluation:
[Custom x4]	PSNR: 25.822 (Best: 25.843 @epoch 12)
Forward: 142.51s

Saving...
Total: 143.65s

[Epoch 21]	Learning rate: 1.00e-4
[1600/2400]	[L1: 7.5262]	182.4+287.4s

Evaluation:
[Custom x4]	PSNR: 25.832 (Best: 25.843 @epoch 12)
Forward: 142.43s

Saving...
Total: 143.39s

[Epoch 22]	Learning rate: 1.00e-4
[1600/2400]	[L1: 7.5695]	182.3+287.3s

Evaluation:
[Custom x4]	PSNR: 25.826 (Best: 25.843 @epoch 12)
Forward: 142.51s

Saving...
Total: 143.44s

[Epoch 23]	Learning rate: 1.00e-4
[1600/2400]	[L1: 7.4570]	181.9+286.9s

Evaluation:
[Custom x4]	PSNR: 25.824 (Best: 25.843 @epoch 12)
Forward: 142.47s

Saving...
Total: 143.40s

[Epoch 24]	Learning rate: 1.00e-4
[1600/2400]	[L1: 7.4496]	181.9+287.0s

Evaluation:
[Custom x4]	PSNR: 25.832 (Best: 25.843 @epoch 12)
Forward: 142.48s

Saving...
Total: 143.42s

[Epoch 25]	Learning rate: 1.00e-4
[1600/2400]	[L1: 7.6331]	182.0+287.0s

Evaluation:
[Custom x4]	PSNR: 25.821 (Best: 25.843 @epoch 12)
Forward: 142.54s

Saving...
Total: 143.65s

[Epoch 26]	Learning rate: 1.00e-4
[1600/2400]	[L1: 7.5595]	182.1+287.0s

Evaluation:
[Custom x4]	PSNR: 25.817 (Best: 25.843 @epoch 12)
Forward: 142.54s

Saving...
Total: 143.57s

[Epoch 27]	Learning rate: 1.00e-4
[1600/2400]	[L1: 7.4888]	182.0+287.1s

Evaluation:
[Custom x4]	PSNR: 25.824 (Best: 25.843 @epoch 12)
Forward: 142.52s

Saving...
Total: 143.59s

[Epoch 28]	Learning rate: 1.00e-4
[1600/2400]	[L1: 7.5593]	181.9+287.0s

Evaluation:
[Custom x4]	PSNR: 25.815 (Best: 25.843 @epoch 12)
Forward: 142.56s

Saving...
Total: 143.49s

[Epoch 29]	Learning rate: 1.00e-4
[1600/2400]	[L1: 7.4443]	182.0+287.1s

Evaluation:
[Custom x4]	PSNR: 25.804 (Best: 25.843 @epoch 12)
Forward: 142.54s

Saving...
Total: 143.49s

[Epoch 30]	Learning rate: 1.00e-4
[1600/2400]	[L1: 7.5783]	182.0+287.1s

Evaluation:
[Custom x4]	PSNR: 25.797 (Best: 25.843 @epoch 12)
Forward: 142.55s

Saving...
Total: 143.66s

[Epoch 31]	Learning rate: 1.00e-4
[1600/2400]	[L1: 7.4858]	182.0+287.0s

Evaluation:
[Custom x4]	PSNR: 25.809 (Best: 25.843 @epoch 12)
Forward: 142.54s

Saving...
Total: 143.48s

[Epoch 32]	Learning rate: 1.00e-4
[1600/2400]	[L1: 7.4663]	182.0+287.0s

Evaluation:
[Custom x4]	PSNR: 25.807 (Best: 25.843 @epoch 12)
Forward: 142.47s

Saving...
Total: 143.40s

[Epoch 33]	Learning rate: 1.00e-4
[1600/2400]	[L1: 7.4274]	182.3+287.4s

Evaluation:
[Custom x4]	PSNR: 25.811 (Best: 25.843 @epoch 12)
Forward: 142.54s

Saving...
Total: 143.48s

[Epoch 34]	Learning rate: 1.00e-4
[1600/2400]	[L1: 7.4651]	182.5+287.5s

Evaluation:
[Custom x4]	PSNR: 25.819 (Best: 25.843 @epoch 12)
Forward: 142.53s

Saving...
Total: 143.57s

[Epoch 35]	Learning rate: 1.00e-4
[1600/2400]	[L1: 7.5553]	182.0+287.2s

Evaluation:
[Custom x4]	PSNR: 25.803 (Best: 25.843 @epoch 12)
Forward: 142.53s

Saving...
Total: 143.84s

[Epoch 36]	Learning rate: 1.00e-4
[1600/2400]	[L1: 7.4220]	182.0+287.1s

Evaluation:
[Custom x4]	PSNR: 25.800 (Best: 25.843 @epoch 12)
Forward: 142.53s

Saving...
Total: 143.46s

[Epoch 37]	Learning rate: 1.00e-4
[1600/2400]	[L1: 7.4727]	182.1+287.1s

Evaluation:
[Custom x4]	PSNR: 25.816 (Best: 25.843 @epoch 12)
Forward: 142.58s

Saving...
Total: 143.50s

[Epoch 38]	Learning rate: 1.00e-4
[1600/2400]	[L1: 7.4660]	182.0+287.2s

Evaluation:
[Custom x4]	PSNR: 25.815 (Best: 25.843 @epoch 12)
Forward: 142.51s

Saving...
Total: 143.44s

[Epoch 39]	Learning rate: 1.00e-4
[1600/2400]	[L1: 7.4743]	182.0+287.0s

Evaluation:
[Custom x4]	PSNR: 25.805 (Best: 25.843 @epoch 12)
Forward: 142.52s

Saving...
Total: 143.46s

[Epoch 40]	Learning rate: 1.00e-4
[1600/2400]	[L1: 7.4099]	182.0+287.1s

Evaluation:
[Custom x4]	PSNR: 25.815 (Best: 25.843 @epoch 12)
Forward: 142.54s

Saving...
Total: 143.66s

