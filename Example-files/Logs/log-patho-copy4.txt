EDSR(
  (sub_mean): MeanShift(3, 3, kernel_size=(1, 1), stride=(1, 1))
  (add_mean): MeanShift(3, 3, kernel_size=(1, 1), stride=(1, 1))
  (head): Sequential(
    (0): Conv2d(3, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  )
  (body): Sequential(
    (0): ResBlock(
      (body): Sequential(
        (0): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (1): ReLU(inplace=True)
        (2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      )
    )
    (1): ResBlock(
      (body): Sequential(
        (0): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (1): ReLU(inplace=True)
        (2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      )
    )
    (2): ResBlock(
      (body): Sequential(
        (0): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (1): ReLU(inplace=True)
        (2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      )
    )
    (3): ResBlock(
      (body): Sequential(
        (0): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (1): ReLU(inplace=True)
        (2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      )
    )
    (4): ResBlock(
      (body): Sequential(
        (0): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (1): ReLU(inplace=True)
        (2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      )
    )
    (5): ResBlock(
      (body): Sequential(
        (0): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (1): ReLU(inplace=True)
        (2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      )
    )
    (6): ResBlock(
      (body): Sequential(
        (0): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (1): ReLU(inplace=True)
        (2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      )
    )
    (7): ResBlock(
      (body): Sequential(
        (0): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (1): ReLU(inplace=True)
        (2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      )
    )
    (8): ResBlock(
      (body): Sequential(
        (0): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (1): ReLU(inplace=True)
        (2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      )
    )
    (9): ResBlock(
      (body): Sequential(
        (0): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (1): ReLU(inplace=True)
        (2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      )
    )
    (10): ResBlock(
      (body): Sequential(
        (0): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (1): ReLU(inplace=True)
        (2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      )
    )
    (11): ResBlock(
      (body): Sequential(
        (0): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (1): ReLU(inplace=True)
        (2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      )
    )
    (12): ResBlock(
      (body): Sequential(
        (0): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (1): ReLU(inplace=True)
        (2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      )
    )
    (13): ResBlock(
      (body): Sequential(
        (0): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (1): ReLU(inplace=True)
        (2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      )
    )
    (14): ResBlock(
      (body): Sequential(
        (0): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (1): ReLU(inplace=True)
        (2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      )
    )
    (15): ResBlock(
      (body): Sequential(
        (0): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (1): ReLU(inplace=True)
        (2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      )
    )
    (16): ResBlock(
      (body): Sequential(
        (0): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (1): ReLU(inplace=True)
        (2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      )
    )
    (17): ResBlock(
      (body): Sequential(
        (0): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (1): ReLU(inplace=True)
        (2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      )
    )
    (18): ResBlock(
      (body): Sequential(
        (0): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (1): ReLU(inplace=True)
        (2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      )
    )
    (19): ResBlock(
      (body): Sequential(
        (0): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (1): ReLU(inplace=True)
        (2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      )
    )
    (20): ResBlock(
      (body): Sequential(
        (0): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (1): ReLU(inplace=True)
        (2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      )
    )
    (21): ResBlock(
      (body): Sequential(
        (0): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (1): ReLU(inplace=True)
        (2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      )
    )
    (22): ResBlock(
      (body): Sequential(
        (0): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (1): ReLU(inplace=True)
        (2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      )
    )
    (23): ResBlock(
      (body): Sequential(
        (0): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (1): ReLU(inplace=True)
        (2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      )
    )
    (24): ResBlock(
      (body): Sequential(
        (0): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (1): ReLU(inplace=True)
        (2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      )
    )
    (25): ResBlock(
      (body): Sequential(
        (0): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (1): ReLU(inplace=True)
        (2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      )
    )
    (26): ResBlock(
      (body): Sequential(
        (0): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (1): ReLU(inplace=True)
        (2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      )
    )
    (27): ResBlock(
      (body): Sequential(
        (0): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (1): ReLU(inplace=True)
        (2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      )
    )
    (28): ResBlock(
      (body): Sequential(
        (0): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (1): ReLU(inplace=True)
        (2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      )
    )
    (29): ResBlock(
      (body): Sequential(
        (0): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (1): ReLU(inplace=True)
        (2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      )
    )
    (30): ResBlock(
      (body): Sequential(
        (0): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (1): ReLU(inplace=True)
        (2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      )
    )
    (31): ResBlock(
      (body): Sequential(
        (0): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (1): ReLU(inplace=True)
        (2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      )
    )
    (32): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  )
  (tail): Sequential(
    (0): Upsampler(
      (0): Conv2d(256, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (1): PixelShuffle(upscale_factor=2)
      (2): Conv2d(256, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (3): PixelShuffle(upscale_factor=2)
    )
    (1): Conv2d(256, 3, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  )
)
[Epoch 1]	Learning rate: 1.00e-4
[1600/2400]	[L1: 10.5223]	182.8+286.6s

Evaluation:
[Custom x4]	PSNR: 25.959 (Best: 25.959 @epoch 1)
Forward: 142.56s

Saving...
Total: 143.62s

[Epoch 2]	Learning rate: 1.00e-4
[1600/2400]	[L1: 10.5984]	181.9+287.2s

Evaluation:
[Custom x4]	PSNR: 25.978 (Best: 25.978 @epoch 2)
Forward: 142.55s

Saving...
Total: 143.89s

[Epoch 3]	Learning rate: 1.00e-4
[1600/2400]	[L1: 10.6068]	182.0+287.2s

Evaluation:
[Custom x4]	PSNR: 25.984 (Best: 25.984 @epoch 3)
Forward: 142.56s

Saving...
Total: 143.84s

[Epoch 4]	Learning rate: 1.00e-4
[1600/2400]	[L1: 10.5951]	181.9+287.2s

Evaluation:
[Custom x4]	PSNR: 25.975 (Best: 25.984 @epoch 3)
Forward: 142.54s

Saving...
Total: 143.51s

[Epoch 5]	Learning rate: 1.00e-4
[1600/2400]	[L1: 10.5605]	181.9+287.2s

Evaluation:
[Custom x4]	PSNR: 25.966 (Best: 25.984 @epoch 3)
Forward: 142.55s

Saving...
Total: 143.76s

[Epoch 6]	Learning rate: 1.00e-4
[1600/2400]	[L1: 10.5068]	181.9+287.1s

Evaluation:
[Custom x4]	PSNR: 25.976 (Best: 25.984 @epoch 3)
Forward: 142.56s

Saving...
Total: 143.54s

[Epoch 7]	Learning rate: 1.00e-4
[1600/2400]	[L1: 10.4381]	182.5+287.6s

Evaluation:
[Custom x4]	PSNR: 25.964 (Best: 25.984 @epoch 3)
Forward: 142.56s

Saving...
Total: 143.49s

[Epoch 8]	Learning rate: 1.00e-4
[1600/2400]	[L1: 10.5273]	182.5+287.6s

Evaluation:
[Custom x4]	PSNR: 25.974 (Best: 25.984 @epoch 3)
Forward: 142.53s

Saving...
Total: 143.55s

[Epoch 9]	Learning rate: 1.00e-4
[1600/2400]	[L1: 10.6374]	181.9+287.2s

Evaluation:
[Custom x4]	PSNR: 25.981 (Best: 25.984 @epoch 3)
Forward: 142.52s

Saving...
Total: 143.55s

[Epoch 10]	Learning rate: 1.00e-4
[1600/2400]	[L1: 10.4380]	181.9+287.2s

Evaluation:
[Custom x4]	PSNR: 25.987 (Best: 25.987 @epoch 10)
Forward: 142.58s

Saving...
Total: 143.89s

[Epoch 11]	Learning rate: 1.00e-4
[1600/2400]	[L1: 10.4645]	181.9+287.2s

Evaluation:
[Custom x4]	PSNR: 25.977 (Best: 25.987 @epoch 10)
Forward: 142.54s

Saving...
Total: 143.46s

[Epoch 12]	Learning rate: 1.00e-4
[1600/2400]	[L1: 10.5870]	182.0+287.3s

Evaluation:
[Custom x4]	PSNR: 25.974 (Best: 25.987 @epoch 10)
Forward: 142.55s

Saving...
Total: 143.48s

[Epoch 13]	Learning rate: 1.00e-4
[1600/2400]	[L1: 10.5072]	182.0+287.5s

Evaluation:
[Custom x4]	PSNR: 25.980 (Best: 25.987 @epoch 10)
Forward: 142.57s

Saving...
Total: 143.50s

[Epoch 14]	Learning rate: 1.00e-4
[1600/2400]	[L1: 10.4579]	182.0+287.3s

Evaluation:
[Custom x4]	PSNR: 25.972 (Best: 25.987 @epoch 10)
Forward: 142.53s

Saving...
Total: 143.46s

[Epoch 15]	Learning rate: 1.00e-4
[1600/2400]	[L1: 10.4495]	181.9+287.3s

Evaluation:
[Custom x4]	PSNR: 25.928 (Best: 25.987 @epoch 10)
Forward: 142.54s

Saving...
Total: 143.64s

[Epoch 16]	Learning rate: 1.00e-4
[1600/2400]	[L1: 10.4433]	181.9+287.3s

Evaluation:
[Custom x4]	PSNR: 25.966 (Best: 25.987 @epoch 10)
Forward: 142.51s

Saving...
Total: 143.45s

[Epoch 17]	Learning rate: 1.00e-4
[1600/2400]	[L1: 10.4731]	181.9+287.2s

Evaluation:
[Custom x4]	PSNR: 25.974 (Best: 25.987 @epoch 10)
Forward: 142.54s

Saving...
Total: 143.56s

[Epoch 18]	Learning rate: 1.00e-4
[1600/2400]	[L1: 10.5125]	181.9+287.3s

Evaluation:
[Custom x4]	PSNR: 25.967 (Best: 25.987 @epoch 10)
Forward: 142.56s

Saving...
Total: 143.50s

[Epoch 19]	Learning rate: 1.00e-4
[1600/2400]	[L1: 10.3907]	182.3+287.7s

Evaluation:
[Custom x4]	PSNR: 25.982 (Best: 25.987 @epoch 10)
Forward: 142.57s

Saving...
Total: 143.66s

[Epoch 20]	Learning rate: 1.00e-4
[1600/2400]	[L1: 10.3594]	182.4+287.6s

Evaluation:
[Custom x4]	PSNR: 25.973 (Best: 25.987 @epoch 10)
Forward: 142.52s

Saving...
Total: 143.81s

[Epoch 21]	Learning rate: 1.00e-4
[1600/2400]	[L1: 10.4698]	182.2+287.6s

Evaluation:
[Custom x4]	PSNR: 25.983 (Best: 25.987 @epoch 10)
Forward: 142.52s

Saving...
Total: 143.62s

[Epoch 22]	Learning rate: 1.00e-4
[1600/2400]	[L1: 10.3933]	181.9+287.4s

Evaluation:
[Custom x4]	PSNR: 25.967 (Best: 25.987 @epoch 10)
Forward: 142.55s

Saving...
Total: 143.63s

[Epoch 23]	Learning rate: 1.00e-4
[1600/2400]	[L1: 10.2270]	181.9+287.2s

Evaluation:
[Custom x4]	PSNR: 25.981 (Best: 25.987 @epoch 10)
Forward: 142.49s

Saving...
Total: 143.55s

[Epoch 24]	Learning rate: 1.00e-4
[1600/2400]	[L1: 10.4429]	181.9+287.3s

Evaluation:
[Custom x4]	PSNR: 25.970 (Best: 25.987 @epoch 10)
Forward: 142.52s

Saving...
Total: 143.59s

[Epoch 25]	Learning rate: 1.00e-4
[1600/2400]	[L1: 10.3004]	181.9+287.2s

Evaluation:
[Custom x4]	PSNR: 25.958 (Best: 25.987 @epoch 10)
Forward: 142.49s

Saving...
Total: 143.76s

[Epoch 26]	Learning rate: 1.00e-4
[1600/2400]	[L1: 10.3734]	181.9+287.3s

Evaluation:
[Custom x4]	PSNR: 25.974 (Best: 25.987 @epoch 10)
Forward: 142.51s

Saving...
Total: 143.49s

[Epoch 27]	Learning rate: 1.00e-4
[1600/2400]	[L1: 10.4374]	181.9+287.2s

Evaluation:
[Custom x4]	PSNR: 25.980 (Best: 25.987 @epoch 10)
Forward: 142.50s

Saving...
Total: 143.62s

[Epoch 28]	Learning rate: 1.00e-4
[1600/2400]	[L1: 10.3895]	181.9+287.4s

Evaluation:
[Custom x4]	PSNR: 25.968 (Best: 25.987 @epoch 10)
Forward: 142.51s

Saving...
Total: 143.58s

[Epoch 29]	Learning rate: 1.00e-4
[1600/2400]	[L1: 10.3223]	181.9+287.3s

Evaluation:
[Custom x4]	PSNR: 25.968 (Best: 25.987 @epoch 10)
Forward: 142.55s

Saving...
Total: 143.64s

[Epoch 30]	Learning rate: 1.00e-4
[1600/2400]	[L1: 10.4774]	181.9+287.4s

Evaluation:
[Custom x4]	PSNR: 25.968 (Best: 25.987 @epoch 10)
Forward: 142.53s

Saving...
Total: 143.84s

[Epoch 31]	Learning rate: 1.00e-4
[1600/2400]	[L1: 10.4282]	181.9+287.4s

Evaluation:
[Custom x4]	PSNR: 25.954 (Best: 25.987 @epoch 10)
Forward: 142.59s

Saving...
Total: 143.69s

[Epoch 32]	Learning rate: 1.00e-4
[1600/2400]	[L1: 10.3483]	182.5+287.8s

Evaluation:
[Custom x4]	PSNR: 25.970 (Best: 25.987 @epoch 10)
Forward: 142.61s

Saving...
Total: 143.67s

[Epoch 33]	Learning rate: 1.00e-4
[1600/2400]	[L1: 10.3403]	182.5+287.8s

Evaluation:
[Custom x4]	PSNR: 25.962 (Best: 25.987 @epoch 10)
Forward: 142.53s

Saving...
Total: 143.50s

[Epoch 34]	Learning rate: 1.00e-4
[1600/2400]	[L1: 10.3090]	181.9+287.3s

Evaluation:
[Custom x4]	PSNR: 25.967 (Best: 25.987 @epoch 10)
Forward: 142.49s

Saving...
Total: 143.43s

[Epoch 35]	Learning rate: 1.00e-4
[1600/2400]	[L1: 10.3017]	181.9+287.3s

Evaluation:
[Custom x4]	PSNR: 25.963 (Best: 25.987 @epoch 10)
Forward: 142.49s

Saving...
Total: 143.70s

[Epoch 36]	Learning rate: 1.00e-4
[1600/2400]	[L1: 10.3042]	182.0+287.4s

Evaluation:
[Custom x4]	PSNR: 25.964 (Best: 25.987 @epoch 10)
Forward: 142.52s

Saving...
Total: 143.47s

[Epoch 37]	Learning rate: 1.00e-4
[1600/2400]	[L1: 10.4645]	181.9+287.3s

Evaluation:
[Custom x4]	PSNR: 25.954 (Best: 25.987 @epoch 10)
Forward: 142.49s

Saving...
Total: 143.44s

[Epoch 38]	Learning rate: 1.00e-4
[1600/2400]	[L1: 10.4037]	181.9+287.3s

Evaluation:
[Custom x4]	PSNR: 25.961 (Best: 25.987 @epoch 10)
Forward: 142.45s

Saving...
Total: 143.39s

[Epoch 39]	Learning rate: 1.00e-4
[1600/2400]	[L1: 10.4023]	181.9+287.4s

Evaluation:
[Custom x4]	PSNR: 25.965 (Best: 25.987 @epoch 10)
Forward: 142.52s

Saving...
Total: 143.46s

[Epoch 40]	Learning rate: 1.00e-4
[1600/2400]	[L1: 10.2348]	181.9+287.3s

Evaluation:
[Custom x4]	PSNR: 25.952 (Best: 25.987 @epoch 10)
Forward: 142.53s

Saving...
Total: 143.65s

