EDSR(
  (sub_mean): MeanShift(3, 3, kernel_size=(1, 1), stride=(1, 1))
  (add_mean): MeanShift(3, 3, kernel_size=(1, 1), stride=(1, 1))
  (head): Sequential(
    (0): Conv2d(3, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  )
  (body): Sequential(
    (0): ResBlock(
      (body): Sequential(
        (0): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (1): ReLU(inplace=True)
        (2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      )
    )
    (1): ResBlock(
      (body): Sequential(
        (0): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (1): ReLU(inplace=True)
        (2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      )
    )
    (2): ResBlock(
      (body): Sequential(
        (0): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (1): ReLU(inplace=True)
        (2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      )
    )
    (3): ResBlock(
      (body): Sequential(
        (0): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (1): ReLU(inplace=True)
        (2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      )
    )
    (4): ResBlock(
      (body): Sequential(
        (0): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (1): ReLU(inplace=True)
        (2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      )
    )
    (5): ResBlock(
      (body): Sequential(
        (0): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (1): ReLU(inplace=True)
        (2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      )
    )
    (6): ResBlock(
      (body): Sequential(
        (0): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (1): ReLU(inplace=True)
        (2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      )
    )
    (7): ResBlock(
      (body): Sequential(
        (0): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (1): ReLU(inplace=True)
        (2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      )
    )
    (8): ResBlock(
      (body): Sequential(
        (0): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (1): ReLU(inplace=True)
        (2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      )
    )
    (9): ResBlock(
      (body): Sequential(
        (0): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (1): ReLU(inplace=True)
        (2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      )
    )
    (10): ResBlock(
      (body): Sequential(
        (0): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (1): ReLU(inplace=True)
        (2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      )
    )
    (11): ResBlock(
      (body): Sequential(
        (0): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (1): ReLU(inplace=True)
        (2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      )
    )
    (12): ResBlock(
      (body): Sequential(
        (0): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (1): ReLU(inplace=True)
        (2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      )
    )
    (13): ResBlock(
      (body): Sequential(
        (0): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (1): ReLU(inplace=True)
        (2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      )
    )
    (14): ResBlock(
      (body): Sequential(
        (0): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (1): ReLU(inplace=True)
        (2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      )
    )
    (15): ResBlock(
      (body): Sequential(
        (0): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (1): ReLU(inplace=True)
        (2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      )
    )
    (16): ResBlock(
      (body): Sequential(
        (0): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (1): ReLU(inplace=True)
        (2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      )
    )
    (17): ResBlock(
      (body): Sequential(
        (0): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (1): ReLU(inplace=True)
        (2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      )
    )
    (18): ResBlock(
      (body): Sequential(
        (0): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (1): ReLU(inplace=True)
        (2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      )
    )
    (19): ResBlock(
      (body): Sequential(
        (0): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (1): ReLU(inplace=True)
        (2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      )
    )
    (20): ResBlock(
      (body): Sequential(
        (0): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (1): ReLU(inplace=True)
        (2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      )
    )
    (21): ResBlock(
      (body): Sequential(
        (0): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (1): ReLU(inplace=True)
        (2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      )
    )
    (22): ResBlock(
      (body): Sequential(
        (0): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (1): ReLU(inplace=True)
        (2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      )
    )
    (23): ResBlock(
      (body): Sequential(
        (0): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (1): ReLU(inplace=True)
        (2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      )
    )
    (24): ResBlock(
      (body): Sequential(
        (0): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (1): ReLU(inplace=True)
        (2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      )
    )
    (25): ResBlock(
      (body): Sequential(
        (0): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (1): ReLU(inplace=True)
        (2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      )
    )
    (26): ResBlock(
      (body): Sequential(
        (0): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (1): ReLU(inplace=True)
        (2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      )
    )
    (27): ResBlock(
      (body): Sequential(
        (0): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (1): ReLU(inplace=True)
        (2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      )
    )
    (28): ResBlock(
      (body): Sequential(
        (0): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (1): ReLU(inplace=True)
        (2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      )
    )
    (29): ResBlock(
      (body): Sequential(
        (0): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (1): ReLU(inplace=True)
        (2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      )
    )
    (30): ResBlock(
      (body): Sequential(
        (0): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (1): ReLU(inplace=True)
        (2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      )
    )
    (31): ResBlock(
      (body): Sequential(
        (0): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (1): ReLU(inplace=True)
        (2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      )
    )
    (32): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  )
  (tail): Sequential(
    (0): Upsampler(
      (0): Conv2d(256, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (1): PixelShuffle(upscale_factor=2)
      (2): Conv2d(256, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (3): PixelShuffle(upscale_factor=2)
    )
    (1): Conv2d(256, 3, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  )
)
[Epoch 1]	Learning rate: 1.00e-4
[1600/2400]	[L1: 11.7171]	182.6+286.7s

Evaluation:
[Custom x4]	PSNR: 25.314 (Best: 25.314 @epoch 1)
Forward: 142.55s

Saving...
Total: 143.64s

[Epoch 2]	Learning rate: 1.00e-4
[1600/2400]	[L1: 11.7102]	182.3+287.5s

Evaluation:
[Custom x4]	PSNR: 25.319 (Best: 25.319 @epoch 2)
Forward: 142.57s

Saving...
Total: 143.78s

[Epoch 3]	Learning rate: 1.00e-4
[1600/2400]	[L1: 11.6350]	182.5+287.8s

Evaluation:
[Custom x4]	PSNR: 25.315 (Best: 25.319 @epoch 2)
Forward: 142.58s

Saving...
Total: 143.58s

[Epoch 4]	Learning rate: 1.00e-4
[1600/2400]	[L1: 11.6606]	182.2+287.5s

Evaluation:
[Custom x4]	PSNR: 25.331 (Best: 25.331 @epoch 4)
Forward: 142.59s

Saving...
Total: 143.79s

[Epoch 5]	Learning rate: 1.00e-4
[1600/2400]	[L1: 11.6113]	182.0+287.4s

Evaluation:
[Custom x4]	PSNR: 25.319 (Best: 25.331 @epoch 4)
Forward: 142.62s

Saving...
Total: 143.76s

[Epoch 6]	Learning rate: 1.00e-4
[1600/2400]	[L1: 11.7236]	181.9+287.4s

Evaluation:
[Custom x4]	PSNR: 25.336 (Best: 25.336 @epoch 6)
Forward: 142.55s

Saving...
Total: 143.73s

[Epoch 7]	Learning rate: 1.00e-4
[1600/2400]	[L1: 11.6237]	182.0+287.3s

Evaluation:
[Custom x4]	PSNR: 25.325 (Best: 25.336 @epoch 6)
Forward: 142.54s

Saving...
Total: 143.48s

[Epoch 8]	Learning rate: 1.00e-4
[1600/2400]	[L1: 11.6832]	182.0+287.4s

Evaluation:
[Custom x4]	PSNR: 25.343 (Best: 25.343 @epoch 8)
Forward: 142.59s

Saving...
Total: 143.80s

[Epoch 9]	Learning rate: 1.00e-4
[1600/2400]	[L1: 11.5343]	182.0+287.3s

Evaluation:
[Custom x4]	PSNR: 25.326 (Best: 25.343 @epoch 8)
Forward: 142.54s

Saving...
Total: 143.62s

[Epoch 10]	Learning rate: 1.00e-4
[1600/2400]	[L1: 11.6297]	182.0+287.2s

Evaluation:
[Custom x4]	PSNR: 25.333 (Best: 25.343 @epoch 8)
Forward: 142.54s

Saving...
Total: 143.67s

[Epoch 11]	Learning rate: 1.00e-4
[1600/2400]	[L1: 11.7335]	181.9+287.4s

Evaluation:
[Custom x4]	PSNR: 25.324 (Best: 25.343 @epoch 8)
Forward: 142.53s

Saving...
Total: 143.47s

[Epoch 12]	Learning rate: 1.00e-4
[1600/2400]	[L1: 11.6026]	181.9+287.4s

Evaluation:
[Custom x4]	PSNR: 25.343 (Best: 25.343 @epoch 12)
Forward: 142.57s

Saving...
Total: 143.75s

[Epoch 13]	Learning rate: 1.00e-4
[1600/2400]	[L1: 11.6622]	182.0+287.5s

Evaluation:
[Custom x4]	PSNR: 25.342 (Best: 25.343 @epoch 12)
Forward: 142.58s

Saving...
Total: 143.53s

[Epoch 14]	Learning rate: 1.00e-4
[1600/2400]	[L1: 11.5397]	181.9+287.3s

Evaluation:
[Custom x4]	PSNR: 25.326 (Best: 25.343 @epoch 12)
Forward: 142.52s

Saving...
Total: 143.58s

[Epoch 15]	Learning rate: 1.00e-4
[1600/2400]	[L1: 11.5420]	182.5+287.8s

Evaluation:
[Custom x4]	PSNR: 25.314 (Best: 25.343 @epoch 12)
Forward: 142.61s

Saving...
Total: 143.81s

[Epoch 16]	Learning rate: 1.00e-4
[1600/2400]	[L1: 11.4845]	182.6+287.9s

Evaluation:
[Custom x4]	PSNR: 25.339 (Best: 25.343 @epoch 12)
Forward: 142.55s

Saving...
Total: 143.57s

[Epoch 17]	Learning rate: 1.00e-4
[1600/2400]	[L1: 11.5599]	182.0+287.4s

Evaluation:
[Custom x4]	PSNR: 25.307 (Best: 25.343 @epoch 12)
Forward: 142.57s

Saving...
Total: 143.64s

[Epoch 18]	Learning rate: 1.00e-4
[1600/2400]	[L1: 11.6424]	182.0+287.4s

Evaluation:
[Custom x4]	PSNR: 25.335 (Best: 25.343 @epoch 12)
Forward: 142.52s

Saving...
Total: 143.49s

[Epoch 19]	Learning rate: 1.00e-4
[1600/2400]	[L1: 11.5318]	181.9+287.3s

Evaluation:
[Custom x4]	PSNR: 25.337 (Best: 25.343 @epoch 12)
Forward: 142.50s

Saving...
Total: 143.46s

[Epoch 20]	Learning rate: 1.00e-4
[1600/2400]	[L1: 11.5549]	181.9+287.3s

Evaluation:
[Custom x4]	PSNR: 25.334 (Best: 25.343 @epoch 12)
Forward: 142.54s

Saving...
Total: 143.70s

[Epoch 21]	Learning rate: 1.00e-4
[1600/2400]	[L1: 11.5358]	182.0+287.4s

Evaluation:
[Custom x4]	PSNR: 25.311 (Best: 25.343 @epoch 12)
Forward: 142.54s

Saving...
Total: 143.49s

[Epoch 22]	Learning rate: 1.00e-4
[1600/2400]	[L1: 11.4443]	182.0+287.3s

Evaluation:
[Custom x4]	PSNR: 25.335 (Best: 25.343 @epoch 12)
Forward: 142.53s

Saving...
Total: 143.46s

[Epoch 23]	Learning rate: 1.00e-4
[1600/2400]	[L1: 11.5379]	181.9+287.4s

Evaluation:
[Custom x4]	PSNR: 25.325 (Best: 25.343 @epoch 12)
Forward: 142.51s

Saving...
Total: 143.42s

[Epoch 24]	Learning rate: 1.00e-4
[1600/2400]	[L1: 11.3592]	182.0+287.4s

Evaluation:
[Custom x4]	PSNR: 25.325 (Best: 25.343 @epoch 12)
Forward: 142.60s

Saving...
Total: 143.53s

[Epoch 25]	Learning rate: 1.00e-4
[1600/2400]	[L1: 11.6421]	181.9+287.5s

Evaluation:
[Custom x4]	PSNR: 25.326 (Best: 25.343 @epoch 12)
Forward: 142.52s

Saving...
Total: 143.70s

[Epoch 26]	Learning rate: 1.00e-4
[1600/2400]	[L1: 11.5121]	182.0+287.4s

Evaluation:
[Custom x4]	PSNR: 25.328 (Best: 25.343 @epoch 12)
Forward: 142.51s

Saving...
Total: 143.53s

[Epoch 27]	Learning rate: 1.00e-4
[1600/2400]	[L1: 11.5319]	182.0+287.5s

Evaluation:
[Custom x4]	PSNR: 25.323 (Best: 25.343 @epoch 12)
Forward: 142.59s

Saving...
Total: 143.64s

[Epoch 28]	Learning rate: 1.00e-4
[1600/2400]	[L1: 11.5395]	182.6+288.0s

Evaluation:
[Custom x4]	PSNR: 25.311 (Best: 25.343 @epoch 12)
Forward: 142.61s

Saving...
Total: 143.56s

[Epoch 29]	Learning rate: 1.00e-4
[1600/2400]	[L1: 11.4273]	182.5+287.9s

Evaluation:
[Custom x4]	PSNR: 25.310 (Best: 25.343 @epoch 12)
Forward: 142.58s

Saving...
Total: 143.54s

[Epoch 30]	Learning rate: 1.00e-4
[1600/2400]	[L1: 11.5315]	182.0+287.5s

Evaluation:
[Custom x4]	PSNR: 25.323 (Best: 25.343 @epoch 12)
Forward: 142.56s

Saving...
Total: 143.70s

[Epoch 31]	Learning rate: 1.00e-4
[1600/2400]	[L1: 11.4449]	182.0+287.5s

Evaluation:
[Custom x4]	PSNR: 25.308 (Best: 25.343 @epoch 12)
Forward: 142.55s

Saving...
Total: 143.51s

[Epoch 32]	Learning rate: 1.00e-4
[1600/2400]	[L1: 11.3996]	181.9+287.5s

Evaluation:
[Custom x4]	PSNR: 25.312 (Best: 25.343 @epoch 12)
Forward: 142.58s

Saving...
Total: 143.55s

[Epoch 33]	Learning rate: 1.00e-4
[1600/2400]	[L1: 11.4347]	182.0+287.5s

Evaluation:
[Custom x4]	PSNR: 25.306 (Best: 25.343 @epoch 12)
Forward: 142.57s

Saving...
Total: 143.54s

[Epoch 34]	Learning rate: 1.00e-4
[1600/2400]	[L1: 11.4691]	182.0+287.5s

Evaluation:
[Custom x4]	PSNR: 25.312 (Best: 25.343 @epoch 12)
Forward: 142.54s

Saving...
Total: 143.53s

[Epoch 35]	Learning rate: 1.00e-4
[1600/2400]	[L1: 11.5072]	181.9+287.4s

Evaluation:
[Custom x4]	PSNR: 25.310 (Best: 25.343 @epoch 12)
Forward: 142.52s

Saving...
Total: 143.67s

[Epoch 36]	Learning rate: 1.00e-4
[1600/2400]	[L1: 11.4171]	181.9+287.4s

Evaluation:
[Custom x4]	PSNR: 25.301 (Best: 25.343 @epoch 12)
Forward: 142.53s

Saving...
Total: 143.49s

[Epoch 37]	Learning rate: 1.00e-4
[1600/2400]	[L1: 11.4269]	182.0+287.5s

Evaluation:
[Custom x4]	PSNR: 25.325 (Best: 25.343 @epoch 12)
Forward: 142.62s

Saving...
Total: 143.70s

[Epoch 38]	Learning rate: 1.00e-4
[1600/2400]	[L1: 11.4280]	182.0+287.5s

Evaluation:
[Custom x4]	PSNR: 25.313 (Best: 25.343 @epoch 12)
Forward: 142.54s

Saving...
Total: 143.50s

[Epoch 39]	Learning rate: 1.00e-4
[1600/2400]	[L1: 11.3914]	182.0+287.5s

Evaluation:
[Custom x4]	PSNR: 25.308 (Best: 25.343 @epoch 12)
Forward: 142.55s

Saving...
Total: 143.52s

[Epoch 40]	Learning rate: 1.00e-4
[1600/2400]	[L1: 11.4911]	182.4+287.8s

Evaluation:
[Custom x4]	PSNR: 25.308 (Best: 25.343 @epoch 12)
Forward: 142.56s

Saving...
Total: 143.74s

