EDSR(
  (sub_mean): MeanShift(3, 3, kernel_size=(1, 1), stride=(1, 1))
  (add_mean): MeanShift(3, 3, kernel_size=(1, 1), stride=(1, 1))
  (head): Sequential(
    (0): Conv2d(3, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  )
  (body): Sequential(
    (0): ResBlock(
      (body): Sequential(
        (0): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (1): ReLU(inplace=True)
        (2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      )
    )
    (1): ResBlock(
      (body): Sequential(
        (0): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (1): ReLU(inplace=True)
        (2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      )
    )
    (2): ResBlock(
      (body): Sequential(
        (0): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (1): ReLU(inplace=True)
        (2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      )
    )
    (3): ResBlock(
      (body): Sequential(
        (0): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (1): ReLU(inplace=True)
        (2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      )
    )
    (4): ResBlock(
      (body): Sequential(
        (0): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (1): ReLU(inplace=True)
        (2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      )
    )
    (5): ResBlock(
      (body): Sequential(
        (0): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (1): ReLU(inplace=True)
        (2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      )
    )
    (6): ResBlock(
      (body): Sequential(
        (0): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (1): ReLU(inplace=True)
        (2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      )
    )
    (7): ResBlock(
      (body): Sequential(
        (0): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (1): ReLU(inplace=True)
        (2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      )
    )
    (8): ResBlock(
      (body): Sequential(
        (0): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (1): ReLU(inplace=True)
        (2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      )
    )
    (9): ResBlock(
      (body): Sequential(
        (0): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (1): ReLU(inplace=True)
        (2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      )
    )
    (10): ResBlock(
      (body): Sequential(
        (0): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (1): ReLU(inplace=True)
        (2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      )
    )
    (11): ResBlock(
      (body): Sequential(
        (0): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (1): ReLU(inplace=True)
        (2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      )
    )
    (12): ResBlock(
      (body): Sequential(
        (0): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (1): ReLU(inplace=True)
        (2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      )
    )
    (13): ResBlock(
      (body): Sequential(
        (0): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (1): ReLU(inplace=True)
        (2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      )
    )
    (14): ResBlock(
      (body): Sequential(
        (0): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (1): ReLU(inplace=True)
        (2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      )
    )
    (15): ResBlock(
      (body): Sequential(
        (0): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (1): ReLU(inplace=True)
        (2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      )
    )
    (16): ResBlock(
      (body): Sequential(
        (0): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (1): ReLU(inplace=True)
        (2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      )
    )
    (17): ResBlock(
      (body): Sequential(
        (0): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (1): ReLU(inplace=True)
        (2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      )
    )
    (18): ResBlock(
      (body): Sequential(
        (0): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (1): ReLU(inplace=True)
        (2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      )
    )
    (19): ResBlock(
      (body): Sequential(
        (0): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (1): ReLU(inplace=True)
        (2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      )
    )
    (20): ResBlock(
      (body): Sequential(
        (0): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (1): ReLU(inplace=True)
        (2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      )
    )
    (21): ResBlock(
      (body): Sequential(
        (0): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (1): ReLU(inplace=True)
        (2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      )
    )
    (22): ResBlock(
      (body): Sequential(
        (0): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (1): ReLU(inplace=True)
        (2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      )
    )
    (23): ResBlock(
      (body): Sequential(
        (0): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (1): ReLU(inplace=True)
        (2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      )
    )
    (24): ResBlock(
      (body): Sequential(
        (0): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (1): ReLU(inplace=True)
        (2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      )
    )
    (25): ResBlock(
      (body): Sequential(
        (0): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (1): ReLU(inplace=True)
        (2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      )
    )
    (26): ResBlock(
      (body): Sequential(
        (0): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (1): ReLU(inplace=True)
        (2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      )
    )
    (27): ResBlock(
      (body): Sequential(
        (0): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (1): ReLU(inplace=True)
        (2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      )
    )
    (28): ResBlock(
      (body): Sequential(
        (0): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (1): ReLU(inplace=True)
        (2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      )
    )
    (29): ResBlock(
      (body): Sequential(
        (0): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (1): ReLU(inplace=True)
        (2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      )
    )
    (30): ResBlock(
      (body): Sequential(
        (0): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (1): ReLU(inplace=True)
        (2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      )
    )
    (31): ResBlock(
      (body): Sequential(
        (0): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (1): ReLU(inplace=True)
        (2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      )
    )
    (32): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  )
  (tail): Sequential(
    (0): Upsampler(
      (0): Conv2d(256, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (1): PixelShuffle(upscale_factor=2)
      (2): Conv2d(256, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (3): PixelShuffle(upscale_factor=2)
    )
    (1): Conv2d(256, 3, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  )
)
[Epoch 1]	Learning rate: 1.00e-4
[1600/2400]	[L1: 9.6060]	183.0+286.6s

Evaluation:
[Custom x4]	PSNR: 22.972 (Best: 22.972 @epoch 1)
Forward: 142.61s

Saving...
Total: 143.77s

[Epoch 2]	Learning rate: 1.00e-4
[1600/2400]	[L1: 9.4688]	182.1+287.2s

Evaluation:
[Custom x4]	PSNR: 22.961 (Best: 22.972 @epoch 1)
Forward: 142.63s

Saving...
Total: 143.61s

[Epoch 3]	Learning rate: 1.00e-4
[1600/2400]	[L1: 9.4902]	182.2+287.1s

Evaluation:
[Custom x4]	PSNR: 22.983 (Best: 22.983 @epoch 3)
Forward: 142.51s

Saving...
Total: 143.78s

[Epoch 4]	Learning rate: 1.00e-4
[1600/2400]	[L1: 9.4582]	182.5+287.6s

Evaluation:
[Custom x4]	PSNR: 22.979 (Best: 22.983 @epoch 3)
Forward: 142.60s

Saving...
Total: 143.55s

[Epoch 5]	Learning rate: 1.00e-4
[1600/2400]	[L1: 9.3405]	182.5+287.5s

Evaluation:
[Custom x4]	PSNR: 22.979 (Best: 22.983 @epoch 3)
Forward: 142.58s

Saving...
Total: 143.72s

[Epoch 6]	Learning rate: 1.00e-4
[1600/2400]	[L1: 9.4660]	182.1+287.3s

Evaluation:
[Custom x4]	PSNR: 22.984 (Best: 22.984 @epoch 6)
Forward: 142.67s

Saving...
Total: 143.91s

[Epoch 7]	Learning rate: 1.00e-4
[1600/2400]	[L1: 9.4176]	182.2+287.3s

Evaluation:
[Custom x4]	PSNR: 22.979 (Best: 22.984 @epoch 6)
Forward: 142.64s

Saving...
Total: 143.63s

[Epoch 8]	Learning rate: 1.00e-4
[1600/2400]	[L1: 9.4772]	182.2+287.3s

Evaluation:
[Custom x4]	PSNR: 22.985 (Best: 22.985 @epoch 8)
Forward: 142.63s

Saving...
Total: 143.92s

[Epoch 9]	Learning rate: 1.00e-4
[1600/2400]	[L1: 9.3445]	182.1+287.2s

Evaluation:
[Custom x4]	PSNR: 22.988 (Best: 22.988 @epoch 9)
Forward: 142.61s

Saving...
Total: 143.99s

[Epoch 10]	Learning rate: 1.00e-4
[1600/2400]	[L1: 9.3942]	182.1+287.3s

Evaluation:
[Custom x4]	PSNR: 22.967 (Best: 22.988 @epoch 9)
Forward: 142.63s

Saving...
Total: 143.81s

[Epoch 11]	Learning rate: 1.00e-4
[1600/2400]	[L1: 9.4144]	182.1+287.4s

Evaluation:
[Custom x4]	PSNR: 22.965 (Best: 22.988 @epoch 9)
Forward: 142.66s

Saving...
Total: 143.70s

[Epoch 12]	Learning rate: 1.00e-4
[1600/2400]	[L1: 9.4663]	182.1+287.4s

Evaluation:
[Custom x4]	PSNR: 22.977 (Best: 22.988 @epoch 9)
Forward: 142.67s

Saving...
Total: 143.73s

[Epoch 13]	Learning rate: 1.00e-4
[1600/2400]	[L1: 9.3545]	182.1+287.3s

Evaluation:
[Custom x4]	PSNR: 22.990 (Best: 22.990 @epoch 13)
Forward: 142.64s

Saving...
Total: 143.91s

[Epoch 14]	Learning rate: 1.00e-4
[1600/2400]	[L1: 9.4326]	182.1+287.4s

Evaluation:
[Custom x4]	PSNR: 22.990 (Best: 22.990 @epoch 14)
Forward: 142.66s

Saving...
Total: 143.99s

[Epoch 15]	Learning rate: 1.00e-4
[1600/2400]	[L1: 9.4309]	182.1+287.4s

Evaluation:
[Custom x4]	PSNR: 22.978 (Best: 22.990 @epoch 14)
Forward: 142.60s

Saving...
Total: 143.81s

[Epoch 16]	Learning rate: 1.00e-4
[1600/2400]	[L1: 9.4477]	182.3+287.5s

Evaluation:
[Custom x4]	PSNR: 22.979 (Best: 22.990 @epoch 14)
Forward: 142.59s

Saving...
Total: 143.64s

[Epoch 17]	Learning rate: 1.00e-4
[1600/2400]	[L1: 9.3083]	182.6+287.7s

Evaluation:
[Custom x4]	PSNR: 22.987 (Best: 22.990 @epoch 14)
Forward: 142.64s

Saving...
Total: 143.72s

[Epoch 18]	Learning rate: 1.00e-4
[1600/2400]	[L1: 9.3400]	182.5+287.7s

Evaluation:
[Custom x4]	PSNR: 22.977 (Best: 22.990 @epoch 14)
Forward: 142.70s

Saving...
Total: 143.81s

[Epoch 19]	Learning rate: 1.00e-4
[1600/2400]	[L1: 9.4378]	182.2+287.4s

Evaluation:
[Custom x4]	PSNR: 22.958 (Best: 22.990 @epoch 14)
Forward: 142.69s

Saving...
Total: 143.68s

[Epoch 20]	Learning rate: 1.00e-4
[1600/2400]	[L1: 9.3202]	182.1+287.4s

Evaluation:
[Custom x4]	PSNR: 22.958 (Best: 22.990 @epoch 14)
Forward: 142.64s

Saving...
Total: 143.81s

[Epoch 21]	Learning rate: 1.00e-4
[1600/2400]	[L1: 9.4138]	182.1+287.4s

Evaluation:
[Custom x4]	PSNR: 22.982 (Best: 22.990 @epoch 14)
Forward: 142.64s

Saving...
Total: 143.63s

[Epoch 22]	Learning rate: 1.00e-4
[1600/2400]	[L1: 9.2662]	182.1+287.4s

Evaluation:
[Custom x4]	PSNR: 22.955 (Best: 22.990 @epoch 14)
Forward: 142.59s

Saving...
Total: 143.55s

[Epoch 23]	Learning rate: 1.00e-4
[1600/2400]	[L1: 9.2924]	182.1+287.4s

Evaluation:
[Custom x4]	PSNR: 22.984 (Best: 22.990 @epoch 14)
Forward: 142.72s

Saving...
Total: 143.67s

[Epoch 24]	Learning rate: 1.00e-4
[1600/2400]	[L1: 9.2611]	182.2+287.4s

Evaluation:
[Custom x4]	PSNR: 22.986 (Best: 22.990 @epoch 14)
Forward: 142.62s

Saving...
Total: 143.59s

[Epoch 25]	Learning rate: 1.00e-4
[1600/2400]	[L1: 9.2410]	182.1+287.4s

Evaluation:
[Custom x4]	PSNR: 22.952 (Best: 22.990 @epoch 14)
Forward: 142.60s

Saving...
Total: 143.73s

[Epoch 26]	Learning rate: 1.00e-4
[1600/2400]	[L1: 9.3451]	182.1+287.3s

Evaluation:
[Custom x4]	PSNR: 22.974 (Best: 22.990 @epoch 14)
Forward: 142.62s

Saving...
Total: 143.64s

[Epoch 27]	Learning rate: 1.00e-4
[1600/2400]	[L1: 9.2992]	182.1+287.4s

Evaluation:
[Custom x4]	PSNR: 22.967 (Best: 22.990 @epoch 14)
Forward: 142.71s

Saving...
Total: 143.76s

[Epoch 28]	Learning rate: 1.00e-4
[1600/2400]	[L1: 9.3209]	182.2+287.5s

Evaluation:
[Custom x4]	PSNR: 22.954 (Best: 22.990 @epoch 14)
Forward: 142.67s

Saving...
Total: 143.78s

[Epoch 29]	Learning rate: 1.00e-4
[1600/2400]	[L1: 9.1936]	182.6+287.7s

Evaluation:
[Custom x4]	PSNR: 22.944 (Best: 22.990 @epoch 14)
Forward: 142.57s

Saving...
Total: 143.61s

[Epoch 30]	Learning rate: 1.00e-4
[1600/2400]	[L1: 9.2755]	182.5+287.7s

Evaluation:
[Custom x4]	PSNR: 22.960 (Best: 22.990 @epoch 14)
Forward: 142.59s

Saving...
Total: 143.86s

[Epoch 31]	Learning rate: 1.00e-4
[1600/2400]	[L1: 9.3398]	182.2+287.4s

Evaluation:
[Custom x4]	PSNR: 22.977 (Best: 22.990 @epoch 14)
Forward: 142.68s

Saving...
Total: 143.73s

[Epoch 32]	Learning rate: 1.00e-4
[1600/2400]	[L1: 9.3078]	182.1+287.4s

Evaluation:
[Custom x4]	PSNR: 22.968 (Best: 22.990 @epoch 14)
Forward: 142.66s

Saving...
Total: 143.72s

[Epoch 33]	Learning rate: 1.00e-4
[1600/2400]	[L1: 9.2872]	182.2+287.4s

Evaluation:
[Custom x4]	PSNR: 22.958 (Best: 22.990 @epoch 14)
Forward: 142.62s

Saving...
Total: 143.68s

[Epoch 34]	Learning rate: 1.00e-4
[1600/2400]	[L1: 9.1844]	182.1+287.4s

Evaluation:
[Custom x4]	PSNR: 22.954 (Best: 22.990 @epoch 14)
Forward: 142.66s

Saving...
Total: 143.64s

[Epoch 35]	Learning rate: 1.00e-4
[1600/2400]	[L1: 9.2699]	182.3+287.5s

Evaluation:
[Custom x4]	PSNR: 22.963 (Best: 22.990 @epoch 14)
Forward: 142.67s

Saving...
Total: 143.78s

[Epoch 36]	Learning rate: 1.00e-4
[1600/2400]	[L1: 9.2811]	182.2+287.5s

Evaluation:
[Custom x4]	PSNR: 22.954 (Best: 22.990 @epoch 14)
Forward: 142.71s

Saving...
Total: 143.73s

[Epoch 37]	Learning rate: 1.00e-4
[1600/2400]	[L1: 9.1898]	182.2+287.5s

Evaluation:
[Custom x4]	PSNR: 22.961 (Best: 22.990 @epoch 14)
Forward: 142.72s

Saving...
Total: 143.71s

[Epoch 38]	Learning rate: 1.00e-4
[1600/2400]	[L1: 9.2100]	182.3+287.3s

Evaluation:
[Custom x4]	PSNR: 22.952 (Best: 22.990 @epoch 14)
Forward: 142.71s

Saving...
Total: 143.70s

[Epoch 39]	Learning rate: 1.00e-4
[1600/2400]	[L1: 9.1451]	182.3+287.4s

Evaluation:
[Custom x4]	PSNR: 22.940 (Best: 22.990 @epoch 14)
Forward: 142.70s

Saving...
Total: 143.66s

[Epoch 40]	Learning rate: 1.00e-4
[1600/2400]	[L1: 9.2689]	182.1+287.5s

Evaluation:
[Custom x4]	PSNR: 22.948 (Best: 22.990 @epoch 14)
Forward: 142.68s

Saving...
Total: 143.81s

