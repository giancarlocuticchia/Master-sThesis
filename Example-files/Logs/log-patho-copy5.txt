EDSR(
  (sub_mean): MeanShift(3, 3, kernel_size=(1, 1), stride=(1, 1))
  (add_mean): MeanShift(3, 3, kernel_size=(1, 1), stride=(1, 1))
  (head): Sequential(
    (0): Conv2d(3, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  )
  (body): Sequential(
    (0): ResBlock(
      (body): Sequential(
        (0): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (1): ReLU(inplace=True)
        (2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      )
    )
    (1): ResBlock(
      (body): Sequential(
        (0): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (1): ReLU(inplace=True)
        (2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      )
    )
    (2): ResBlock(
      (body): Sequential(
        (0): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (1): ReLU(inplace=True)
        (2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      )
    )
    (3): ResBlock(
      (body): Sequential(
        (0): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (1): ReLU(inplace=True)
        (2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      )
    )
    (4): ResBlock(
      (body): Sequential(
        (0): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (1): ReLU(inplace=True)
        (2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      )
    )
    (5): ResBlock(
      (body): Sequential(
        (0): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (1): ReLU(inplace=True)
        (2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      )
    )
    (6): ResBlock(
      (body): Sequential(
        (0): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (1): ReLU(inplace=True)
        (2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      )
    )
    (7): ResBlock(
      (body): Sequential(
        (0): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (1): ReLU(inplace=True)
        (2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      )
    )
    (8): ResBlock(
      (body): Sequential(
        (0): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (1): ReLU(inplace=True)
        (2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      )
    )
    (9): ResBlock(
      (body): Sequential(
        (0): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (1): ReLU(inplace=True)
        (2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      )
    )
    (10): ResBlock(
      (body): Sequential(
        (0): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (1): ReLU(inplace=True)
        (2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      )
    )
    (11): ResBlock(
      (body): Sequential(
        (0): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (1): ReLU(inplace=True)
        (2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      )
    )
    (12): ResBlock(
      (body): Sequential(
        (0): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (1): ReLU(inplace=True)
        (2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      )
    )
    (13): ResBlock(
      (body): Sequential(
        (0): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (1): ReLU(inplace=True)
        (2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      )
    )
    (14): ResBlock(
      (body): Sequential(
        (0): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (1): ReLU(inplace=True)
        (2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      )
    )
    (15): ResBlock(
      (body): Sequential(
        (0): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (1): ReLU(inplace=True)
        (2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      )
    )
    (16): ResBlock(
      (body): Sequential(
        (0): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (1): ReLU(inplace=True)
        (2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      )
    )
    (17): ResBlock(
      (body): Sequential(
        (0): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (1): ReLU(inplace=True)
        (2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      )
    )
    (18): ResBlock(
      (body): Sequential(
        (0): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (1): ReLU(inplace=True)
        (2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      )
    )
    (19): ResBlock(
      (body): Sequential(
        (0): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (1): ReLU(inplace=True)
        (2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      )
    )
    (20): ResBlock(
      (body): Sequential(
        (0): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (1): ReLU(inplace=True)
        (2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      )
    )
    (21): ResBlock(
      (body): Sequential(
        (0): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (1): ReLU(inplace=True)
        (2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      )
    )
    (22): ResBlock(
      (body): Sequential(
        (0): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (1): ReLU(inplace=True)
        (2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      )
    )
    (23): ResBlock(
      (body): Sequential(
        (0): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (1): ReLU(inplace=True)
        (2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      )
    )
    (24): ResBlock(
      (body): Sequential(
        (0): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (1): ReLU(inplace=True)
        (2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      )
    )
    (25): ResBlock(
      (body): Sequential(
        (0): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (1): ReLU(inplace=True)
        (2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      )
    )
    (26): ResBlock(
      (body): Sequential(
        (0): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (1): ReLU(inplace=True)
        (2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      )
    )
    (27): ResBlock(
      (body): Sequential(
        (0): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (1): ReLU(inplace=True)
        (2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      )
    )
    (28): ResBlock(
      (body): Sequential(
        (0): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (1): ReLU(inplace=True)
        (2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      )
    )
    (29): ResBlock(
      (body): Sequential(
        (0): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (1): ReLU(inplace=True)
        (2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      )
    )
    (30): ResBlock(
      (body): Sequential(
        (0): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (1): ReLU(inplace=True)
        (2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      )
    )
    (31): ResBlock(
      (body): Sequential(
        (0): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (1): ReLU(inplace=True)
        (2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      )
    )
    (32): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  )
  (tail): Sequential(
    (0): Upsampler(
      (0): Conv2d(256, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (1): PixelShuffle(upscale_factor=2)
      (2): Conv2d(256, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (3): PixelShuffle(upscale_factor=2)
    )
    (1): Conv2d(256, 3, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  )
)
[Epoch 1]	Learning rate: 1.00e-4
[1600/2400]	[L1: 10.1666]	183.2+286.8s

Evaluation:
[Custom x4]	PSNR: 29.959 (Best: 29.959 @epoch 1)
Forward: 142.51s

Saving...
Total: 143.67s

[Epoch 2]	Learning rate: 1.00e-4
[1600/2400]	[L1: 10.1244]	182.4+287.4s

Evaluation:
[Custom x4]	PSNR: 29.970 (Best: 29.970 @epoch 2)
Forward: 142.40s

Saving...
Total: 143.57s

[Epoch 3]	Learning rate: 1.00e-4
[1600/2400]	[L1: 10.2038]	181.8+287.0s

Evaluation:
[Custom x4]	PSNR: 29.983 (Best: 29.983 @epoch 3)
Forward: 142.41s

Saving...
Total: 143.65s

[Epoch 4]	Learning rate: 1.00e-4
[1600/2400]	[L1: 10.2437]	181.9+286.9s

Evaluation:
[Custom x4]	PSNR: 29.976 (Best: 29.983 @epoch 3)
Forward: 142.38s

Saving...
Total: 143.42s

[Epoch 5]	Learning rate: 1.00e-4
[1600/2400]	[L1: 10.0981]	181.8+286.9s

Evaluation:
[Custom x4]	PSNR: 29.976 (Best: 29.983 @epoch 3)
Forward: 142.45s

Saving...
Total: 143.66s

[Epoch 6]	Learning rate: 1.00e-4
[1600/2400]	[L1: 10.0842]	181.9+287.0s

Evaluation:
[Custom x4]	PSNR: 29.977 (Best: 29.983 @epoch 3)
Forward: 142.46s

Saving...
Total: 143.51s

[Epoch 7]	Learning rate: 1.00e-4
[1600/2400]	[L1: 10.0734]	181.8+287.0s

Evaluation:
[Custom x4]	PSNR: 29.967 (Best: 29.983 @epoch 3)
Forward: 142.45s

Saving...
Total: 143.39s

[Epoch 8]	Learning rate: 1.00e-4
[1600/2400]	[L1: 10.0247]	181.9+287.0s

Evaluation:
[Custom x4]	PSNR: 29.975 (Best: 29.983 @epoch 3)
Forward: 142.45s

Saving...
Total: 143.38s

[Epoch 9]	Learning rate: 1.00e-4
[1600/2400]	[L1: 10.1096]	181.9+287.1s

Evaluation:
[Custom x4]	PSNR: 29.983 (Best: 29.983 @epoch 9)
Forward: 142.50s

Saving...
Total: 143.78s

[Epoch 10]	Learning rate: 1.00e-4
[1600/2400]	[L1: 10.0144]	181.9+287.0s

Evaluation:
[Custom x4]	PSNR: 29.981 (Best: 29.983 @epoch 9)
Forward: 142.49s

Saving...
Total: 143.58s

[Epoch 11]	Learning rate: 1.00e-4
[1600/2400]	[L1: 10.0641]	181.9+287.1s

Evaluation:
[Custom x4]	PSNR: 29.984 (Best: 29.984 @epoch 11)
Forward: 142.49s

Saving...
Total: 143.63s

[Epoch 12]	Learning rate: 1.00e-4
[1600/2400]	[L1: 10.0307]	181.9+287.1s

Evaluation:
[Custom x4]	PSNR: 29.986 (Best: 29.986 @epoch 12)
Forward: 142.44s

Saving...
Total: 143.59s

[Epoch 13]	Learning rate: 1.00e-4
[1600/2400]	[L1: 9.9934]	182.3+287.4s

Evaluation:
[Custom x4]	PSNR: 29.976 (Best: 29.986 @epoch 12)
Forward: 142.43s

Saving...
Total: 143.37s

[Epoch 14]	Learning rate: 1.00e-4
[1600/2400]	[L1: 9.9861]	182.4+287.5s

Evaluation:
[Custom x4]	PSNR: 29.988 (Best: 29.988 @epoch 14)
Forward: 142.54s

Saving...
Total: 143.69s

[Epoch 15]	Learning rate: 1.00e-4
[1600/2400]	[L1: 10.0855]	182.1+287.2s

Evaluation:
[Custom x4]	PSNR: 29.977 (Best: 29.988 @epoch 14)
Forward: 142.46s

Saving...
Total: 143.57s

[Epoch 16]	Learning rate: 1.00e-4
[1600/2400]	[L1: 9.8669]	181.9+287.1s

Evaluation:
[Custom x4]	PSNR: 29.982 (Best: 29.988 @epoch 14)
Forward: 142.52s

Saving...
Total: 143.46s

[Epoch 17]	Learning rate: 1.00e-4
[1600/2400]	[L1: 10.0658]	181.9+287.1s

Evaluation:
[Custom x4]	PSNR: 29.980 (Best: 29.988 @epoch 14)
Forward: 142.46s

Saving...
Total: 143.50s

[Epoch 18]	Learning rate: 1.00e-4
[1600/2400]	[L1: 10.0629]	181.9+287.1s

Evaluation:
[Custom x4]	PSNR: 29.982 (Best: 29.988 @epoch 14)
Forward: 142.45s

Saving...
Total: 143.39s

[Epoch 19]	Learning rate: 1.00e-4
[1600/2400]	[L1: 10.0122]	181.8+287.1s

Evaluation:
[Custom x4]	PSNR: 29.978 (Best: 29.988 @epoch 14)
Forward: 142.42s

Saving...
Total: 143.36s

[Epoch 20]	Learning rate: 1.00e-4
[1600/2400]	[L1: 10.0178]	181.9+287.1s

Evaluation:
[Custom x4]	PSNR: 29.979 (Best: 29.988 @epoch 14)
Forward: 142.42s

Saving...
Total: 143.54s

[Epoch 21]	Learning rate: 1.00e-4
[1600/2400]	[L1: 9.9643]	181.9+287.1s

Evaluation:
[Custom x4]	PSNR: 29.974 (Best: 29.988 @epoch 14)
Forward: 142.45s

Saving...
Total: 143.40s

[Epoch 22]	Learning rate: 1.00e-4
[1600/2400]	[L1: 10.0119]	181.9+287.0s

Evaluation:
[Custom x4]	PSNR: 29.979 (Best: 29.988 @epoch 14)
Forward: 142.40s

Saving...
Total: 143.32s

[Epoch 23]	Learning rate: 1.00e-4
[1600/2400]	[L1: 9.9574]	181.9+287.1s

Evaluation:
[Custom x4]	PSNR: 30.001 (Best: 30.001 @epoch 23)
Forward: 142.49s

Saving...
Total: 143.63s

[Epoch 24]	Learning rate: 1.00e-4
[1600/2400]	[L1: 9.9945]	181.9+287.1s

Evaluation:
[Custom x4]	PSNR: 29.987 (Best: 30.001 @epoch 23)
Forward: 142.44s

Saving...
Total: 143.37s

[Epoch 25]	Learning rate: 1.00e-4
[1600/2400]	[L1: 10.0094]	181.8+287.1s

Evaluation:
[Custom x4]	PSNR: 29.961 (Best: 30.001 @epoch 23)
Forward: 142.50s

Saving...
Total: 143.61s

[Epoch 26]	Learning rate: 1.00e-4
[1600/2400]	[L1: 10.0683]	182.4+287.6s

Evaluation:
[Custom x4]	PSNR: 29.984 (Best: 30.001 @epoch 23)
Forward: 142.55s

Saving...
Total: 143.56s

[Epoch 27]	Learning rate: 1.00e-4
[1600/2400]	[L1: 10.0182]	182.5+287.6s

Evaluation:
[Custom x4]	PSNR: 29.969 (Best: 30.001 @epoch 23)
Forward: 142.53s

Saving...
Total: 143.53s

[Epoch 28]	Learning rate: 1.00e-4
[1600/2400]	[L1: 9.8738]	181.9+287.2s

Evaluation:
[Custom x4]	PSNR: 29.971 (Best: 30.001 @epoch 23)
Forward: 142.46s

Saving...
Total: 143.56s

[Epoch 29]	Learning rate: 1.00e-4
[1600/2400]	[L1: 9.9241]	181.8+287.1s

Evaluation:
[Custom x4]	PSNR: 29.984 (Best: 30.001 @epoch 23)
Forward: 142.44s

Saving...
Total: 143.41s

[Epoch 30]	Learning rate: 1.00e-4
[1600/2400]	[L1: 9.9034]	181.9+287.2s

Evaluation:
[Custom x4]	PSNR: 29.965 (Best: 30.001 @epoch 23)
Forward: 142.49s

Saving...
Total: 143.60s

[Epoch 31]	Learning rate: 1.00e-4
[1600/2400]	[L1: 10.0350]	181.9+287.2s

Evaluation:
[Custom x4]	PSNR: 29.964 (Best: 30.001 @epoch 23)
Forward: 142.49s

Saving...
Total: 143.44s

[Epoch 32]	Learning rate: 1.00e-4
[1600/2400]	[L1: 9.9809]	181.9+287.1s

Evaluation:
[Custom x4]	PSNR: 29.968 (Best: 30.001 @epoch 23)
Forward: 142.45s

Saving...
Total: 143.39s

[Epoch 33]	Learning rate: 1.00e-4
[1600/2400]	[L1: 10.0549]	181.9+287.2s

Evaluation:
[Custom x4]	PSNR: 29.972 (Best: 30.001 @epoch 23)
Forward: 142.47s

Saving...
Total: 143.41s

[Epoch 34]	Learning rate: 1.00e-4
[1600/2400]	[L1: 10.0043]	181.9+287.1s

Evaluation:
[Custom x4]	PSNR: 29.972 (Best: 30.001 @epoch 23)
Forward: 142.46s

Saving...
Total: 143.40s

[Epoch 35]	Learning rate: 1.00e-4
[1600/2400]	[L1: 9.9938]	181.9+287.3s

Evaluation:
[Custom x4]	PSNR: 29.966 (Best: 30.001 @epoch 23)
Forward: 142.53s

Saving...
Total: 143.64s

[Epoch 36]	Learning rate: 1.00e-4
[1600/2400]	[L1: 9.8813]	181.9+287.3s

Evaluation:
[Custom x4]	PSNR: 29.968 (Best: 30.001 @epoch 23)
Forward: 142.41s

Saving...
Total: 143.45s

[Epoch 37]	Learning rate: 1.00e-4
[1600/2400]	[L1: 10.0024]	181.9+287.2s

Evaluation:
[Custom x4]	PSNR: 29.961 (Best: 30.001 @epoch 23)
Forward: 142.45s

Saving...
Total: 143.39s

[Epoch 38]	Learning rate: 1.00e-4
[1600/2400]	[L1: 9.8461]	182.0+287.3s

Evaluation:
[Custom x4]	PSNR: 29.961 (Best: 30.001 @epoch 23)
Forward: 142.52s

Saving...
Total: 143.46s

[Epoch 39]	Learning rate: 1.00e-4
[1600/2400]	[L1: 9.9827]	182.5+287.7s

Evaluation:
[Custom x4]	PSNR: 29.975 (Best: 30.001 @epoch 23)
Forward: 142.53s

Saving...
Total: 143.49s

[Epoch 40]	Learning rate: 1.00e-4
[1600/2400]	[L1: 9.9211]	182.4+287.6s

Evaluation:
[Custom x4]	PSNR: 29.971 (Best: 30.001 @epoch 23)
Forward: 142.45s

Saving...
Total: 143.57s

