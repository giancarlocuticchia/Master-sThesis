EDSR(
  (sub_mean): MeanShift(3, 3, kernel_size=(1, 1), stride=(1, 1))
  (add_mean): MeanShift(3, 3, kernel_size=(1, 1), stride=(1, 1))
  (head): Sequential(
    (0): Conv2d(3, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  )
  (body): Sequential(
    (0): ResBlock(
      (body): Sequential(
        (0): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (1): ReLU(inplace=True)
        (2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      )
    )
    (1): ResBlock(
      (body): Sequential(
        (0): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (1): ReLU(inplace=True)
        (2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      )
    )
    (2): ResBlock(
      (body): Sequential(
        (0): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (1): ReLU(inplace=True)
        (2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      )
    )
    (3): ResBlock(
      (body): Sequential(
        (0): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (1): ReLU(inplace=True)
        (2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      )
    )
    (4): ResBlock(
      (body): Sequential(
        (0): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (1): ReLU(inplace=True)
        (2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      )
    )
    (5): ResBlock(
      (body): Sequential(
        (0): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (1): ReLU(inplace=True)
        (2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      )
    )
    (6): ResBlock(
      (body): Sequential(
        (0): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (1): ReLU(inplace=True)
        (2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      )
    )
    (7): ResBlock(
      (body): Sequential(
        (0): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (1): ReLU(inplace=True)
        (2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      )
    )
    (8): ResBlock(
      (body): Sequential(
        (0): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (1): ReLU(inplace=True)
        (2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      )
    )
    (9): ResBlock(
      (body): Sequential(
        (0): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (1): ReLU(inplace=True)
        (2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      )
    )
    (10): ResBlock(
      (body): Sequential(
        (0): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (1): ReLU(inplace=True)
        (2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      )
    )
    (11): ResBlock(
      (body): Sequential(
        (0): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (1): ReLU(inplace=True)
        (2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      )
    )
    (12): ResBlock(
      (body): Sequential(
        (0): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (1): ReLU(inplace=True)
        (2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      )
    )
    (13): ResBlock(
      (body): Sequential(
        (0): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (1): ReLU(inplace=True)
        (2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      )
    )
    (14): ResBlock(
      (body): Sequential(
        (0): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (1): ReLU(inplace=True)
        (2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      )
    )
    (15): ResBlock(
      (body): Sequential(
        (0): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (1): ReLU(inplace=True)
        (2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      )
    )
    (16): ResBlock(
      (body): Sequential(
        (0): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (1): ReLU(inplace=True)
        (2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      )
    )
    (17): ResBlock(
      (body): Sequential(
        (0): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (1): ReLU(inplace=True)
        (2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      )
    )
    (18): ResBlock(
      (body): Sequential(
        (0): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (1): ReLU(inplace=True)
        (2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      )
    )
    (19): ResBlock(
      (body): Sequential(
        (0): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (1): ReLU(inplace=True)
        (2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      )
    )
    (20): ResBlock(
      (body): Sequential(
        (0): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (1): ReLU(inplace=True)
        (2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      )
    )
    (21): ResBlock(
      (body): Sequential(
        (0): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (1): ReLU(inplace=True)
        (2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      )
    )
    (22): ResBlock(
      (body): Sequential(
        (0): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (1): ReLU(inplace=True)
        (2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      )
    )
    (23): ResBlock(
      (body): Sequential(
        (0): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (1): ReLU(inplace=True)
        (2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      )
    )
    (24): ResBlock(
      (body): Sequential(
        (0): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (1): ReLU(inplace=True)
        (2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      )
    )
    (25): ResBlock(
      (body): Sequential(
        (0): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (1): ReLU(inplace=True)
        (2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      )
    )
    (26): ResBlock(
      (body): Sequential(
        (0): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (1): ReLU(inplace=True)
        (2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      )
    )
    (27): ResBlock(
      (body): Sequential(
        (0): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (1): ReLU(inplace=True)
        (2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      )
    )
    (28): ResBlock(
      (body): Sequential(
        (0): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (1): ReLU(inplace=True)
        (2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      )
    )
    (29): ResBlock(
      (body): Sequential(
        (0): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (1): ReLU(inplace=True)
        (2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      )
    )
    (30): ResBlock(
      (body): Sequential(
        (0): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (1): ReLU(inplace=True)
        (2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      )
    )
    (31): ResBlock(
      (body): Sequential(
        (0): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (1): ReLU(inplace=True)
        (2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      )
    )
    (32): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  )
  (tail): Sequential(
    (0): Upsampler(
      (0): Conv2d(256, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (1): PixelShuffle(upscale_factor=2)
      (2): Conv2d(256, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (3): PixelShuffle(upscale_factor=2)
    )
    (1): Conv2d(256, 3, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  )
)
[Epoch 1]	Learning rate: 1.00e-4
[1600/2400]	[L1: 9.6090]	185.1+288.2s

Evaluation:
[Custom x4]	PSNR: 23.258 (Best: 23.258 @epoch 1)
Forward: 142.95s

Saving...
Total: 144.11s

[Epoch 2]	Learning rate: 1.00e-4
[1600/2400]	[L1: 9.5662]	184.1+288.8s

Evaluation:
[Custom x4]	PSNR: 23.293 (Best: 23.293 @epoch 2)
Forward: 142.93s

Saving...
Total: 144.25s

[Epoch 3]	Learning rate: 1.00e-4
[1600/2400]	[L1: 9.4865]	184.1+288.8s

Evaluation:
[Custom x4]	PSNR: 23.278 (Best: 23.293 @epoch 2)
Forward: 142.92s

Saving...
Total: 144.03s

[Epoch 4]	Learning rate: 1.00e-4
[1600/2400]	[L1: 9.5507]	184.1+288.9s

Evaluation:
[Custom x4]	PSNR: 23.277 (Best: 23.293 @epoch 2)
Forward: 142.91s

Saving...
Total: 143.91s

[Epoch 5]	Learning rate: 1.00e-4
[1600/2400]	[L1: 9.6570]	184.4+289.0s

Evaluation:
[Custom x4]	PSNR: 23.296 (Best: 23.296 @epoch 5)
Forward: 142.96s

Saving...
Total: 144.42s

[Epoch 6]	Learning rate: 1.00e-4
[1600/2400]	[L1: 9.5036]	184.5+289.0s

Evaluation:
[Custom x4]	PSNR: 23.283 (Best: 23.296 @epoch 5)
Forward: 142.96s

Saving...
Total: 144.04s

[Epoch 7]	Learning rate: 1.00e-4
[1600/2400]	[L1: 9.5247]	184.2+288.9s

Evaluation:
[Custom x4]	PSNR: 23.278 (Best: 23.296 @epoch 5)
Forward: 142.95s

Saving...
Total: 144.03s

[Epoch 8]	Learning rate: 1.00e-4
[1600/2400]	[L1: 9.5690]	184.1+288.9s

Evaluation:
[Custom x4]	PSNR: 23.279 (Best: 23.296 @epoch 5)
Forward: 142.94s

Saving...
Total: 144.06s

[Epoch 9]	Learning rate: 1.00e-4
[1600/2400]	[L1: 9.4307]	184.1+288.9s

Evaluation:
[Custom x4]	PSNR: 23.283 (Best: 23.296 @epoch 5)
Forward: 142.98s

Saving...
Total: 143.98s

[Epoch 10]	Learning rate: 1.00e-4
[1600/2400]	[L1: 9.4624]	184.1+289.0s

Evaluation:
[Custom x4]	PSNR: 23.302 (Best: 23.302 @epoch 10)
Forward: 142.97s

Saving...
Total: 144.34s

[Epoch 11]	Learning rate: 1.00e-4
[1600/2400]	[L1: 9.4177]	184.2+288.9s

Evaluation:
[Custom x4]	PSNR: 23.292 (Best: 23.302 @epoch 10)
Forward: 142.96s

Saving...
Total: 143.98s

[Epoch 12]	Learning rate: 1.00e-4
[1600/2400]	[L1: 9.3711]	184.1+288.8s

Evaluation:
[Custom x4]	PSNR: 23.283 (Best: 23.302 @epoch 10)
Forward: 142.86s

Saving...
Total: 143.89s

[Epoch 13]	Learning rate: 1.00e-4
[1600/2400]	[L1: 9.4533]	184.1+288.9s

Evaluation:
[Custom x4]	PSNR: 23.297 (Best: 23.302 @epoch 10)
Forward: 142.94s

Saving...
Total: 143.94s

[Epoch 14]	Learning rate: 1.00e-4
[1600/2400]	[L1: 9.3218]	184.1+288.8s

Evaluation:
[Custom x4]	PSNR: 23.306 (Best: 23.306 @epoch 14)
Forward: 142.98s

Saving...
Total: 144.19s

[Epoch 15]	Learning rate: 1.00e-4
[1600/2400]	[L1: 9.4557]	184.2+288.9s

Evaluation:
[Custom x4]	PSNR: 23.282 (Best: 23.306 @epoch 14)
Forward: 142.96s

Saving...
Total: 144.13s

[Epoch 16]	Learning rate: 1.00e-4
[1600/2400]	[L1: 9.3620]	184.1+288.9s

Evaluation:
[Custom x4]	PSNR: 23.277 (Best: 23.306 @epoch 14)
Forward: 142.92s

Saving...
Total: 144.00s

[Epoch 17]	Learning rate: 1.00e-4
[1600/2400]	[L1: 9.4611]	184.1+289.0s

Evaluation:
[Custom x4]	PSNR: 23.280 (Best: 23.306 @epoch 14)
Forward: 142.96s

Saving...
Total: 143.94s

[Epoch 18]	Learning rate: 1.00e-4
[1600/2400]	[L1: 9.4547]	184.5+289.1s

Evaluation:
[Custom x4]	PSNR: 23.275 (Best: 23.306 @epoch 14)
Forward: 142.97s

Saving...
Total: 143.96s

[Epoch 19]	Learning rate: 1.00e-4
[1600/2400]	[L1: 9.3776]	184.5+289.2s

Evaluation:
[Custom x4]	PSNR: 23.273 (Best: 23.306 @epoch 14)
Forward: 142.99s

Saving...
Total: 143.96s

[Epoch 20]	Learning rate: 1.00e-4
[1600/2400]	[L1: 9.3470]	184.2+289.0s

Evaluation:
[Custom x4]	PSNR: 23.263 (Best: 23.306 @epoch 14)
Forward: 143.01s

Saving...
Total: 144.19s

[Epoch 21]	Learning rate: 1.00e-4
[1600/2400]	[L1: 9.3292]	184.3+289.0s

Evaluation:
[Custom x4]	PSNR: 23.272 (Best: 23.306 @epoch 14)
Forward: 143.03s

Saving...
Total: 144.00s

[Epoch 22]	Learning rate: 1.00e-4
[1600/2400]	[L1: 9.2701]	184.3+289.0s

Evaluation:
[Custom x4]	PSNR: 23.292 (Best: 23.306 @epoch 14)
Forward: 143.02s

Saving...
Total: 143.96s

[Epoch 23]	Learning rate: 1.00e-4
[1600/2400]	[L1: 9.4309]	184.3+289.0s

Evaluation:
[Custom x4]	PSNR: 23.285 (Best: 23.306 @epoch 14)
Forward: 143.00s

Saving...
Total: 143.95s

[Epoch 24]	Learning rate: 1.00e-4
[1600/2400]	[L1: 9.3109]	184.4+289.0s

Evaluation:
[Custom x4]	PSNR: 23.267 (Best: 23.306 @epoch 14)
Forward: 143.05s

Saving...
Total: 144.01s

[Epoch 25]	Learning rate: 1.00e-4
[1600/2400]	[L1: 9.3518]	184.4+289.0s

Evaluation:
[Custom x4]	PSNR: 23.267 (Best: 23.306 @epoch 14)
Forward: 143.01s

Saving...
Total: 144.14s

[Epoch 26]	Learning rate: 1.00e-4
[1600/2400]	[L1: 9.3503]	184.3+289.0s

Evaluation:
[Custom x4]	PSNR: 23.282 (Best: 23.306 @epoch 14)
Forward: 143.13s

Saving...
Total: 144.20s

[Epoch 27]	Learning rate: 1.00e-4
[1600/2400]	[L1: 9.3872]	184.4+289.1s

Evaluation:
[Custom x4]	PSNR: 23.276 (Best: 23.306 @epoch 14)
Forward: 143.01s

Saving...
Total: 143.98s

[Epoch 28]	Learning rate: 1.00e-4
[1600/2400]	[L1: 9.3593]	184.3+289.0s

Evaluation:
[Custom x4]	PSNR: 23.241 (Best: 23.306 @epoch 14)
Forward: 143.03s

Saving...
Total: 144.00s

[Epoch 29]	Learning rate: 1.00e-4
[1600/2400]	[L1: 9.2828]	184.3+289.0s

Evaluation:
[Custom x4]	PSNR: 23.268 (Best: 23.306 @epoch 14)
Forward: 143.00s

Saving...
Total: 143.97s

[Epoch 30]	Learning rate: 1.00e-4
[1600/2400]	[L1: 9.3416]	184.5+289.1s

Evaluation:
[Custom x4]	PSNR: 23.258 (Best: 23.306 @epoch 14)
Forward: 143.02s

Saving...
Total: 144.19s

[Epoch 31]	Learning rate: 1.00e-4
[1600/2400]	[L1: 9.3683]	184.6+289.1s

Evaluation:
[Custom x4]	PSNR: 23.249 (Best: 23.306 @epoch 14)
Forward: 142.98s

Saving...
Total: 143.97s

[Epoch 32]	Learning rate: 1.00e-4
[1600/2400]	[L1: 9.3600]	184.4+289.0s

Evaluation:
[Custom x4]	PSNR: 23.252 (Best: 23.306 @epoch 14)
Forward: 143.00s

Saving...
Total: 143.97s

[Epoch 33]	Learning rate: 1.00e-4
[1600/2400]	[L1: 9.3985]	184.2+289.0s

Evaluation:
[Custom x4]	PSNR: 23.275 (Best: 23.306 @epoch 14)
Forward: 143.00s

Saving...
Total: 143.97s

[Epoch 34]	Learning rate: 1.00e-4
[1600/2400]	[L1: 9.2754]	184.2+289.0s

Evaluation:
[Custom x4]	PSNR: 23.246 (Best: 23.306 @epoch 14)
Forward: 142.95s

Saving...
Total: 144.01s

[Epoch 35]	Learning rate: 1.00e-4
[1600/2400]	[L1: 9.2880]	184.1+289.0s

Evaluation:
[Custom x4]	PSNR: 23.253 (Best: 23.306 @epoch 14)
Forward: 142.96s

Saving...
Total: 144.32s

[Epoch 36]	Learning rate: 1.00e-4
[1600/2400]	[L1: 9.2974]	184.2+289.0s

Evaluation:
[Custom x4]	PSNR: 23.221 (Best: 23.306 @epoch 14)
Forward: 142.97s

Saving...
Total: 143.94s

[Epoch 37]	Learning rate: 1.00e-4
[1600/2400]	[L1: 9.4070]	184.2+289.1s

Evaluation:
[Custom x4]	PSNR: 23.249 (Best: 23.306 @epoch 14)
Forward: 142.99s

Saving...
Total: 143.96s

[Epoch 38]	Learning rate: 1.00e-4
[1600/2400]	[L1: 9.3208]	184.2+289.0s

Evaluation:
[Custom x4]	PSNR: 23.225 (Best: 23.306 @epoch 14)
Forward: 142.98s

Saving...
Total: 143.96s

[Epoch 39]	Learning rate: 1.00e-4
[1600/2400]	[L1: 9.2868]	184.4+289.0s

Evaluation:
[Custom x4]	PSNR: 23.237 (Best: 23.306 @epoch 14)
Forward: 143.06s

Saving...
Total: 144.05s

[Epoch 40]	Learning rate: 1.00e-4
[1600/2400]	[L1: 9.3065]	184.3+289.1s

Evaluation:
[Custom x4]	PSNR: 23.249 (Best: 23.306 @epoch 14)
Forward: 143.00s

Saving...
Total: 144.16s

