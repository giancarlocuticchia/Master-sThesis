EDSR(
  (sub_mean): MeanShift(3, 3, kernel_size=(1, 1), stride=(1, 1))
  (add_mean): MeanShift(3, 3, kernel_size=(1, 1), stride=(1, 1))
  (head): Sequential(
    (0): Conv2d(3, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  )
  (body): Sequential(
    (0): ResBlock(
      (body): Sequential(
        (0): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (1): ReLU(inplace=True)
        (2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      )
    )
    (1): ResBlock(
      (body): Sequential(
        (0): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (1): ReLU(inplace=True)
        (2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      )
    )
    (2): ResBlock(
      (body): Sequential(
        (0): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (1): ReLU(inplace=True)
        (2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      )
    )
    (3): ResBlock(
      (body): Sequential(
        (0): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (1): ReLU(inplace=True)
        (2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      )
    )
    (4): ResBlock(
      (body): Sequential(
        (0): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (1): ReLU(inplace=True)
        (2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      )
    )
    (5): ResBlock(
      (body): Sequential(
        (0): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (1): ReLU(inplace=True)
        (2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      )
    )
    (6): ResBlock(
      (body): Sequential(
        (0): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (1): ReLU(inplace=True)
        (2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      )
    )
    (7): ResBlock(
      (body): Sequential(
        (0): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (1): ReLU(inplace=True)
        (2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      )
    )
    (8): ResBlock(
      (body): Sequential(
        (0): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (1): ReLU(inplace=True)
        (2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      )
    )
    (9): ResBlock(
      (body): Sequential(
        (0): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (1): ReLU(inplace=True)
        (2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      )
    )
    (10): ResBlock(
      (body): Sequential(
        (0): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (1): ReLU(inplace=True)
        (2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      )
    )
    (11): ResBlock(
      (body): Sequential(
        (0): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (1): ReLU(inplace=True)
        (2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      )
    )
    (12): ResBlock(
      (body): Sequential(
        (0): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (1): ReLU(inplace=True)
        (2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      )
    )
    (13): ResBlock(
      (body): Sequential(
        (0): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (1): ReLU(inplace=True)
        (2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      )
    )
    (14): ResBlock(
      (body): Sequential(
        (0): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (1): ReLU(inplace=True)
        (2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      )
    )
    (15): ResBlock(
      (body): Sequential(
        (0): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (1): ReLU(inplace=True)
        (2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      )
    )
    (16): ResBlock(
      (body): Sequential(
        (0): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (1): ReLU(inplace=True)
        (2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      )
    )
    (17): ResBlock(
      (body): Sequential(
        (0): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (1): ReLU(inplace=True)
        (2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      )
    )
    (18): ResBlock(
      (body): Sequential(
        (0): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (1): ReLU(inplace=True)
        (2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      )
    )
    (19): ResBlock(
      (body): Sequential(
        (0): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (1): ReLU(inplace=True)
        (2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      )
    )
    (20): ResBlock(
      (body): Sequential(
        (0): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (1): ReLU(inplace=True)
        (2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      )
    )
    (21): ResBlock(
      (body): Sequential(
        (0): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (1): ReLU(inplace=True)
        (2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      )
    )
    (22): ResBlock(
      (body): Sequential(
        (0): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (1): ReLU(inplace=True)
        (2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      )
    )
    (23): ResBlock(
      (body): Sequential(
        (0): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (1): ReLU(inplace=True)
        (2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      )
    )
    (24): ResBlock(
      (body): Sequential(
        (0): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (1): ReLU(inplace=True)
        (2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      )
    )
    (25): ResBlock(
      (body): Sequential(
        (0): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (1): ReLU(inplace=True)
        (2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      )
    )
    (26): ResBlock(
      (body): Sequential(
        (0): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (1): ReLU(inplace=True)
        (2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      )
    )
    (27): ResBlock(
      (body): Sequential(
        (0): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (1): ReLU(inplace=True)
        (2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      )
    )
    (28): ResBlock(
      (body): Sequential(
        (0): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (1): ReLU(inplace=True)
        (2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      )
    )
    (29): ResBlock(
      (body): Sequential(
        (0): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (1): ReLU(inplace=True)
        (2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      )
    )
    (30): ResBlock(
      (body): Sequential(
        (0): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (1): ReLU(inplace=True)
        (2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      )
    )
    (31): ResBlock(
      (body): Sequential(
        (0): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (1): ReLU(inplace=True)
        (2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      )
    )
    (32): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  )
  (tail): Sequential(
    (0): Upsampler(
      (0): Conv2d(256, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (1): PixelShuffle(upscale_factor=2)
      (2): Conv2d(256, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (3): PixelShuffle(upscale_factor=2)
    )
    (1): Conv2d(256, 3, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  )
)
[Epoch 1]	Learning rate: 1.00e-4
[1600/2400]	[L1: 9.9374]	185.3+288.4s

Evaluation:
[Custom x4]	PSNR: 23.219 (Best: 23.219 @epoch 1)
Forward: 142.95s

Saving...
Total: 144.20s

[Epoch 2]	Learning rate: 1.00e-4
[1600/2400]	[L1: 9.8852]	184.2+288.8s

Evaluation:
[Custom x4]	PSNR: 23.224 (Best: 23.224 @epoch 2)
Forward: 142.94s

Saving...
Total: 144.18s

[Epoch 3]	Learning rate: 1.00e-4
[1600/2400]	[L1: 9.8529]	184.1+288.7s

Evaluation:
[Custom x4]	PSNR: 23.242 (Best: 23.242 @epoch 3)
Forward: 143.02s

Saving...
Total: 144.32s

[Epoch 4]	Learning rate: 1.00e-4
[1600/2400]	[L1: 9.7639]	184.1+288.9s

Evaluation:
[Custom x4]	PSNR: 23.209 (Best: 23.242 @epoch 3)
Forward: 143.04s

Saving...
Total: 144.07s

[Epoch 5]	Learning rate: 1.00e-4
[1600/2400]	[L1: 9.8605]	184.2+288.9s

Evaluation:
[Custom x4]	PSNR: 23.231 (Best: 23.242 @epoch 3)
Forward: 142.98s

Saving...
Total: 144.16s

[Epoch 6]	Learning rate: 1.00e-4
[1600/2400]	[L1: 9.8195]	184.2+288.9s

Evaluation:
[Custom x4]	PSNR: 23.239 (Best: 23.242 @epoch 3)
Forward: 142.97s

Saving...
Total: 143.93s

[Epoch 7]	Learning rate: 1.00e-4
[1600/2400]	[L1: 9.8343]	184.1+288.9s

Evaluation:
[Custom x4]	PSNR: 23.236 (Best: 23.242 @epoch 3)
Forward: 143.01s

Saving...
Total: 144.01s

[Epoch 8]	Learning rate: 1.00e-4
[1600/2400]	[L1: 9.6876]	184.1+288.9s

Evaluation:
[Custom x4]	PSNR: 23.253 (Best: 23.253 @epoch 8)
Forward: 142.91s

Saving...
Total: 144.30s

[Epoch 9]	Learning rate: 1.00e-4
[1600/2400]	[L1: 9.8203]	184.1+288.9s

Evaluation:
[Custom x4]	PSNR: 23.221 (Best: 23.253 @epoch 8)
Forward: 143.01s

Saving...
Total: 144.12s

[Epoch 10]	Learning rate: 1.00e-4
[1600/2400]	[L1: 9.8613]	184.2+288.8s

Evaluation:
[Custom x4]	PSNR: 23.234 (Best: 23.253 @epoch 8)
Forward: 142.95s

Saving...
Total: 144.13s

[Epoch 11]	Learning rate: 1.00e-4
[1600/2400]	[L1: 9.8066]	184.1+288.8s

Evaluation:
[Custom x4]	PSNR: 23.206 (Best: 23.253 @epoch 8)
Forward: 142.92s

Saving...
Total: 143.88s

[Epoch 12]	Learning rate: 1.00e-4
[1600/2400]	[L1: 9.8066]	184.2+288.9s

Evaluation:
[Custom x4]	PSNR: 23.228 (Best: 23.253 @epoch 8)
Forward: 142.96s

Saving...
Total: 143.94s

[Epoch 13]	Learning rate: 1.00e-4
[1600/2400]	[L1: 9.7847]	184.4+289.1s

Evaluation:
[Custom x4]	PSNR: 23.201 (Best: 23.253 @epoch 8)
Forward: 143.02s

Saving...
Total: 144.07s

[Epoch 14]	Learning rate: 1.00e-4
[1600/2400]	[L1: 9.7540]	184.4+289.2s

Evaluation:
[Custom x4]	PSNR: 23.208 (Best: 23.253 @epoch 8)
Forward: 142.93s

Saving...
Total: 144.02s

[Epoch 15]	Learning rate: 1.00e-4
[1600/2400]	[L1: 9.7727]	184.1+288.8s

Evaluation:
[Custom x4]	PSNR: 23.173 (Best: 23.253 @epoch 8)
Forward: 142.90s

Saving...
Total: 144.16s

[Epoch 16]	Learning rate: 1.00e-4
[1600/2400]	[L1: 9.7901]	184.1+288.8s

Evaluation:
[Custom x4]	PSNR: 23.208 (Best: 23.253 @epoch 8)
Forward: 142.94s

Saving...
Total: 143.93s

[Epoch 17]	Learning rate: 1.00e-4
[1600/2400]	[L1: 9.7633]	184.1+288.9s

Evaluation:
[Custom x4]	PSNR: 23.168 (Best: 23.253 @epoch 8)
Forward: 142.95s

Saving...
Total: 144.03s

[Epoch 18]	Learning rate: 1.00e-4
[1600/2400]	[L1: 9.8517]	184.2+288.9s

Evaluation:
[Custom x4]	PSNR: 23.173 (Best: 23.253 @epoch 8)
Forward: 142.95s

Saving...
Total: 143.91s

[Epoch 19]	Learning rate: 1.00e-4
[1600/2400]	[L1: 9.7297]	184.2+288.9s

Evaluation:
[Custom x4]	PSNR: 23.185 (Best: 23.253 @epoch 8)
Forward: 142.98s

Saving...
Total: 143.95s

[Epoch 20]	Learning rate: 1.00e-4
[1600/2400]	[L1: 9.8227]	184.1+289.0s

Evaluation:
[Custom x4]	PSNR: 23.184 (Best: 23.253 @epoch 8)
Forward: 142.97s

Saving...
Total: 144.11s

[Epoch 21]	Learning rate: 1.00e-4
[1600/2400]	[L1: 9.8393]	184.1+289.0s

Evaluation:
[Custom x4]	PSNR: 23.179 (Best: 23.253 @epoch 8)
Forward: 143.03s

Saving...
Total: 143.99s

[Epoch 22]	Learning rate: 1.00e-4
[1600/2400]	[L1: 9.8027]	184.2+288.9s

Evaluation:
[Custom x4]	PSNR: 23.180 (Best: 23.253 @epoch 8)
Forward: 143.00s

Saving...
Total: 143.93s

[Epoch 23]	Learning rate: 1.00e-4
[1600/2400]	[L1: 9.7309]	184.1+289.0s

Evaluation:
[Custom x4]	PSNR: 23.187 (Best: 23.253 @epoch 8)
Forward: 142.99s

Saving...
Total: 143.92s

[Epoch 24]	Learning rate: 1.00e-4
[1600/2400]	[L1: 9.6738]	184.2+288.9s

Evaluation:
[Custom x4]	PSNR: 23.178 (Best: 23.253 @epoch 8)
Forward: 142.96s

Saving...
Total: 143.90s

[Epoch 25]	Learning rate: 1.00e-4
[1600/2400]	[L1: 9.6512]	184.4+289.1s

Evaluation:
[Custom x4]	PSNR: 23.154 (Best: 23.253 @epoch 8)
Forward: 143.03s

Saving...
Total: 144.18s

[Epoch 26]	Learning rate: 1.00e-4
[1600/2400]	[L1: 9.6918]	184.4+289.2s

Evaluation:
[Custom x4]	PSNR: 23.167 (Best: 23.253 @epoch 8)
Forward: 142.97s

Saving...
Total: 143.93s

[Epoch 27]	Learning rate: 1.00e-4
[1600/2400]	[L1: 9.6883]	184.2+289.0s

Evaluation:
[Custom x4]	PSNR: 23.129 (Best: 23.253 @epoch 8)
Forward: 143.02s

Saving...
Total: 144.07s

[Epoch 28]	Learning rate: 1.00e-4
[1600/2400]	[L1: 9.7632]	184.3+288.8s

Evaluation:
[Custom x4]	PSNR: 23.172 (Best: 23.253 @epoch 8)
Forward: 142.96s

Saving...
Total: 143.92s

[Epoch 29]	Learning rate: 1.00e-4
[1600/2400]	[L1: 9.6756]	184.1+288.9s

Evaluation:
[Custom x4]	PSNR: 23.179 (Best: 23.253 @epoch 8)
Forward: 142.97s

Saving...
Total: 143.93s

[Epoch 30]	Learning rate: 1.00e-4
[1600/2400]	[L1: 9.7245]	184.2+289.0s

Evaluation:
[Custom x4]	PSNR: 23.122 (Best: 23.253 @epoch 8)
Forward: 142.99s

Saving...
Total: 144.14s

[Epoch 31]	Learning rate: 1.00e-4
[1600/2400]	[L1: 9.6757]	184.1+288.9s

Evaluation:
[Custom x4]	PSNR: 23.161 (Best: 23.253 @epoch 8)
Forward: 143.02s

Saving...
Total: 143.99s

[Epoch 32]	Learning rate: 1.00e-4
[1600/2400]	[L1: 9.6938]	184.1+289.0s

Evaluation:
[Custom x4]	PSNR: 23.142 (Best: 23.253 @epoch 8)
Forward: 142.96s

Saving...
Total: 143.93s

[Epoch 33]	Learning rate: 1.00e-4
[1600/2400]	[L1: 9.7696]	184.1+288.9s

Evaluation:
[Custom x4]	PSNR: 23.118 (Best: 23.253 @epoch 8)
Forward: 143.02s

Saving...
Total: 143.99s

[Epoch 34]	Learning rate: 1.00e-4
[1600/2400]	[L1: 9.7289]	184.2+288.9s

Evaluation:
[Custom x4]	PSNR: 23.116 (Best: 23.253 @epoch 8)
Forward: 143.01s

Saving...
Total: 143.99s

[Epoch 35]	Learning rate: 1.00e-4
[1600/2400]	[L1: 9.6894]	184.1+289.0s

Evaluation:
[Custom x4]	PSNR: 23.138 (Best: 23.253 @epoch 8)
Forward: 143.01s

Saving...
Total: 144.17s

[Epoch 36]	Learning rate: 1.00e-4
[1600/2400]	[L1: 9.5435]	184.1+289.0s

Evaluation:
[Custom x4]	PSNR: 23.096 (Best: 23.253 @epoch 8)
Forward: 142.96s

Saving...
Total: 143.95s

[Epoch 37]	Learning rate: 1.00e-4
[1600/2400]	[L1: 9.6580]	184.2+289.0s

Evaluation:
[Custom x4]	PSNR: 23.103 (Best: 23.253 @epoch 8)
Forward: 142.96s

Saving...
Total: 143.97s

[Epoch 38]	Learning rate: 1.00e-4
[1600/2400]	[L1: 9.5826]	184.5+289.2s

Evaluation:
[Custom x4]	PSNR: 23.132 (Best: 23.253 @epoch 8)
Forward: 142.98s

Saving...
Total: 144.14s

[Epoch 39]	Learning rate: 1.00e-4
[1600/2400]	[L1: 9.6412]	184.5+289.1s

Evaluation:
[Custom x4]	PSNR: 23.104 (Best: 23.253 @epoch 8)
Forward: 143.06s

Saving...
Total: 144.07s

[Epoch 40]	Learning rate: 1.00e-4
[1600/2400]	[L1: 9.6524]	184.4+289.0s

Evaluation:
[Custom x4]	PSNR: 23.093 (Best: 23.253 @epoch 8)
Forward: 143.07s

Saving...
Total: 144.26s

