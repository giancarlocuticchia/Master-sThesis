EDSR(
  (sub_mean): MeanShift(3, 3, kernel_size=(1, 1), stride=(1, 1))
  (add_mean): MeanShift(3, 3, kernel_size=(1, 1), stride=(1, 1))
  (head): Sequential(
    (0): Conv2d(3, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  )
  (body): Sequential(
    (0): ResBlock(
      (body): Sequential(
        (0): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (1): ReLU(inplace=True)
        (2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      )
    )
    (1): ResBlock(
      (body): Sequential(
        (0): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (1): ReLU(inplace=True)
        (2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      )
    )
    (2): ResBlock(
      (body): Sequential(
        (0): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (1): ReLU(inplace=True)
        (2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      )
    )
    (3): ResBlock(
      (body): Sequential(
        (0): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (1): ReLU(inplace=True)
        (2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      )
    )
    (4): ResBlock(
      (body): Sequential(
        (0): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (1): ReLU(inplace=True)
        (2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      )
    )
    (5): ResBlock(
      (body): Sequential(
        (0): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (1): ReLU(inplace=True)
        (2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      )
    )
    (6): ResBlock(
      (body): Sequential(
        (0): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (1): ReLU(inplace=True)
        (2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      )
    )
    (7): ResBlock(
      (body): Sequential(
        (0): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (1): ReLU(inplace=True)
        (2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      )
    )
    (8): ResBlock(
      (body): Sequential(
        (0): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (1): ReLU(inplace=True)
        (2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      )
    )
    (9): ResBlock(
      (body): Sequential(
        (0): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (1): ReLU(inplace=True)
        (2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      )
    )
    (10): ResBlock(
      (body): Sequential(
        (0): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (1): ReLU(inplace=True)
        (2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      )
    )
    (11): ResBlock(
      (body): Sequential(
        (0): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (1): ReLU(inplace=True)
        (2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      )
    )
    (12): ResBlock(
      (body): Sequential(
        (0): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (1): ReLU(inplace=True)
        (2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      )
    )
    (13): ResBlock(
      (body): Sequential(
        (0): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (1): ReLU(inplace=True)
        (2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      )
    )
    (14): ResBlock(
      (body): Sequential(
        (0): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (1): ReLU(inplace=True)
        (2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      )
    )
    (15): ResBlock(
      (body): Sequential(
        (0): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (1): ReLU(inplace=True)
        (2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      )
    )
    (16): ResBlock(
      (body): Sequential(
        (0): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (1): ReLU(inplace=True)
        (2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      )
    )
    (17): ResBlock(
      (body): Sequential(
        (0): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (1): ReLU(inplace=True)
        (2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      )
    )
    (18): ResBlock(
      (body): Sequential(
        (0): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (1): ReLU(inplace=True)
        (2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      )
    )
    (19): ResBlock(
      (body): Sequential(
        (0): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (1): ReLU(inplace=True)
        (2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      )
    )
    (20): ResBlock(
      (body): Sequential(
        (0): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (1): ReLU(inplace=True)
        (2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      )
    )
    (21): ResBlock(
      (body): Sequential(
        (0): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (1): ReLU(inplace=True)
        (2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      )
    )
    (22): ResBlock(
      (body): Sequential(
        (0): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (1): ReLU(inplace=True)
        (2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      )
    )
    (23): ResBlock(
      (body): Sequential(
        (0): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (1): ReLU(inplace=True)
        (2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      )
    )
    (24): ResBlock(
      (body): Sequential(
        (0): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (1): ReLU(inplace=True)
        (2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      )
    )
    (25): ResBlock(
      (body): Sequential(
        (0): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (1): ReLU(inplace=True)
        (2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      )
    )
    (26): ResBlock(
      (body): Sequential(
        (0): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (1): ReLU(inplace=True)
        (2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      )
    )
    (27): ResBlock(
      (body): Sequential(
        (0): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (1): ReLU(inplace=True)
        (2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      )
    )
    (28): ResBlock(
      (body): Sequential(
        (0): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (1): ReLU(inplace=True)
        (2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      )
    )
    (29): ResBlock(
      (body): Sequential(
        (0): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (1): ReLU(inplace=True)
        (2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      )
    )
    (30): ResBlock(
      (body): Sequential(
        (0): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (1): ReLU(inplace=True)
        (2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      )
    )
    (31): ResBlock(
      (body): Sequential(
        (0): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (1): ReLU(inplace=True)
        (2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      )
    )
    (32): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  )
  (tail): Sequential(
    (0): Upsampler(
      (0): Conv2d(256, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (1): PixelShuffle(upscale_factor=2)
      (2): Conv2d(256, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (3): PixelShuffle(upscale_factor=2)
    )
    (1): Conv2d(256, 3, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  )
)
[Epoch 1]	Learning rate: 1.00e-4
[1600/2172]	[L1: 9.8325]	185.0+288.3s

Evaluation:
[Custom x4]	PSNR: 23.453 (Best: 23.453 @epoch 1)
Forward: 130.60s

Saving...
Total: 131.84s

[Epoch 2]	Learning rate: 1.00e-4
[1600/2172]	[L1: 9.7127]	184.4+288.8s

Evaluation:
[Custom x4]	PSNR: 23.455 (Best: 23.455 @epoch 2)
Forward: 130.59s

Saving...
Total: 131.91s

[Epoch 3]	Learning rate: 1.00e-4
[1600/2172]	[L1: 9.6444]	184.4+289.0s

Evaluation:
[Custom x4]	PSNR: 23.454 (Best: 23.455 @epoch 2)
Forward: 130.53s

Saving...
Total: 131.62s

[Epoch 4]	Learning rate: 1.00e-4
[1600/2172]	[L1: 9.7085]	184.4+288.8s

Evaluation:
[Custom x4]	PSNR: 23.470 (Best: 23.470 @epoch 4)
Forward: 130.53s

Saving...
Total: 131.74s

[Epoch 5]	Learning rate: 1.00e-4
[1600/2172]	[L1: 9.7630]	184.1+288.8s

Evaluation:
[Custom x4]	PSNR: 23.468 (Best: 23.470 @epoch 4)
Forward: 130.49s

Saving...
Total: 131.68s

[Epoch 6]	Learning rate: 1.00e-4
[1600/2172]	[L1: 9.6327]	184.2+288.6s

Evaluation:
[Custom x4]	PSNR: 23.470 (Best: 23.470 @epoch 6)
Forward: 130.62s

Saving...
Total: 131.90s

[Epoch 7]	Learning rate: 1.00e-4
[1600/2172]	[L1: 9.7687]	184.1+288.8s

Evaluation:
[Custom x4]	PSNR: 23.456 (Best: 23.470 @epoch 6)
Forward: 130.52s

Saving...
Total: 131.54s

[Epoch 8]	Learning rate: 1.00e-4
[1600/2172]	[L1: 9.7747]	184.2+288.7s

Evaluation:
[Custom x4]	PSNR: 23.461 (Best: 23.470 @epoch 6)
Forward: 130.51s

Saving...
Total: 131.53s

[Epoch 9]	Learning rate: 1.00e-4
[1600/2172]	[L1: 9.6661]	184.1+288.8s

Evaluation:
[Custom x4]	PSNR: 23.461 (Best: 23.470 @epoch 6)
Forward: 130.49s

Saving...
Total: 131.63s

[Epoch 10]	Learning rate: 1.00e-4
[1600/2172]	[L1: 9.7812]	184.1+288.7s

Evaluation:
[Custom x4]	PSNR: 23.466 (Best: 23.470 @epoch 6)
Forward: 130.56s

Saving...
Total: 131.80s

[Epoch 11]	Learning rate: 1.00e-4
[1600/2172]	[L1: 9.7038]	184.2+288.8s

Evaluation:
[Custom x4]	PSNR: 23.463 (Best: 23.470 @epoch 6)
Forward: 130.51s

Saving...
Total: 131.60s

[Epoch 12]	Learning rate: 1.00e-4
[1600/2172]	[L1: 9.7830]	184.2+288.8s

Evaluation:
[Custom x4]	PSNR: 23.463 (Best: 23.470 @epoch 6)
Forward: 130.50s

Saving...
Total: 131.61s

[Epoch 13]	Learning rate: 1.00e-4
[1600/2172]	[L1: 9.5616]	184.2+288.9s

Evaluation:
[Custom x4]	PSNR: 23.464 (Best: 23.470 @epoch 6)
Forward: 130.55s

Saving...
Total: 131.66s

[Epoch 14]	Learning rate: 1.00e-4
[1600/2172]	[L1: 9.6171]	184.2+288.8s

Evaluation:
[Custom x4]	PSNR: 23.473 (Best: 23.473 @epoch 14)
Forward: 130.63s

Saving...
Total: 131.99s

[Epoch 15]	Learning rate: 1.00e-4
[1600/2172]	[L1: 9.5559]	184.1+288.9s

Evaluation:
[Custom x4]	PSNR: 23.451 (Best: 23.473 @epoch 14)
Forward: 130.48s

Saving...
Total: 131.81s

[Epoch 16]	Learning rate: 1.00e-4
[1600/2172]	[L1: 9.5911]	184.4+288.9s

Evaluation:
[Custom x4]	PSNR: 23.459 (Best: 23.473 @epoch 14)
Forward: 130.51s

Saving...
Total: 131.55s

[Epoch 17]	Learning rate: 1.00e-4
[1600/2172]	[L1: 9.6555]	184.4+289.0s

Evaluation:
[Custom x4]	PSNR: 23.463 (Best: 23.473 @epoch 14)
Forward: 130.48s

Saving...
Total: 131.46s

[Epoch 18]	Learning rate: 1.00e-4
[1600/2172]	[L1: 9.6583]	184.3+288.8s

Evaluation:
[Custom x4]	PSNR: 23.470 (Best: 23.473 @epoch 14)
Forward: 130.61s

Saving...
Total: 131.74s

[Epoch 19]	Learning rate: 1.00e-4
[1600/2172]	[L1: 9.7438]	184.1+288.9s

Evaluation:
[Custom x4]	PSNR: 23.456 (Best: 23.473 @epoch 14)
Forward: 130.54s

Saving...
Total: 131.51s

[Epoch 20]	Learning rate: 1.00e-4
[1600/2172]	[L1: 9.5807]	184.2+288.7s

Evaluation:
[Custom x4]	PSNR: 23.450 (Best: 23.473 @epoch 14)
Forward: 130.52s

Saving...
Total: 131.69s

[Epoch 21]	Learning rate: 1.00e-4
[1600/2172]	[L1: 9.6778]	184.2+288.9s

Evaluation:
[Custom x4]	PSNR: 23.448 (Best: 23.473 @epoch 14)
Forward: 130.54s

Saving...
Total: 131.53s

[Epoch 22]	Learning rate: 1.00e-4
[1600/2172]	[L1: 9.5853]	184.2+288.8s

Evaluation:
[Custom x4]	PSNR: 23.456 (Best: 23.473 @epoch 14)
Forward: 130.60s

Saving...
Total: 131.54s

[Epoch 23]	Learning rate: 1.00e-4
[1600/2172]	[L1: 9.6348]	184.2+289.0s

Evaluation:
[Custom x4]	PSNR: 23.454 (Best: 23.473 @epoch 14)
Forward: 130.56s

Saving...
Total: 131.50s

[Epoch 24]	Learning rate: 1.00e-4
[1600/2172]	[L1: 9.5832]	184.2+288.8s

Evaluation:
[Custom x4]	PSNR: 23.449 (Best: 23.473 @epoch 14)
Forward: 130.54s

Saving...
Total: 131.49s

[Epoch 25]	Learning rate: 1.00e-4
[1600/2172]	[L1: 9.6157]	184.2+288.9s

Evaluation:
[Custom x4]	PSNR: 23.460 (Best: 23.473 @epoch 14)
Forward: 130.55s

Saving...
Total: 131.69s

[Epoch 26]	Learning rate: 1.00e-4
[1600/2172]	[L1: 9.6294]	184.2+288.8s

Evaluation:
[Custom x4]	PSNR: 23.443 (Best: 23.473 @epoch 14)
Forward: 130.64s

Saving...
Total: 131.60s

[Epoch 27]	Learning rate: 1.00e-4
[1600/2172]	[L1: 9.5480]	184.2+288.9s

Evaluation:
[Custom x4]	PSNR: 23.439 (Best: 23.473 @epoch 14)
Forward: 130.55s

Saving...
Total: 131.53s

[Epoch 28]	Learning rate: 1.00e-4
[1600/2172]	[L1: 9.5867]	184.2+288.7s

Evaluation:
[Custom x4]	PSNR: 23.453 (Best: 23.473 @epoch 14)
Forward: 130.52s

Saving...
Total: 131.48s

[Epoch 29]	Learning rate: 1.00e-4
[1600/2172]	[L1: 9.5984]	184.1+289.0s

Evaluation:
[Custom x4]	PSNR: 23.438 (Best: 23.473 @epoch 14)
Forward: 130.58s

Saving...
Total: 131.71s

[Epoch 30]	Learning rate: 1.00e-4
[1600/2172]	[L1: 9.5234]	184.6+289.0s

Evaluation:
[Custom x4]	PSNR: 23.430 (Best: 23.473 @epoch 14)
Forward: 130.60s

Saving...
Total: 131.76s

[Epoch 31]	Learning rate: 1.00e-4
[1600/2172]	[L1: 9.5592]	184.5+289.2s

Evaluation:
[Custom x4]	PSNR: 23.421 (Best: 23.473 @epoch 14)
Forward: 130.61s

Saving...
Total: 131.59s

[Epoch 32]	Learning rate: 1.00e-4
[1600/2172]	[L1: 9.5858]	184.3+288.9s

Evaluation:
[Custom x4]	PSNR: 23.415 (Best: 23.473 @epoch 14)
Forward: 130.48s

Saving...
Total: 131.45s

[Epoch 33]	Learning rate: 1.00e-4
[1600/2172]	[L1: 9.5206]	184.1+288.9s

Evaluation:
[Custom x4]	PSNR: 23.415 (Best: 23.473 @epoch 14)
Forward: 130.54s

Saving...
Total: 131.51s

[Epoch 34]	Learning rate: 1.00e-4
[1600/2172]	[L1: 9.5391]	184.2+288.7s

Evaluation:
[Custom x4]	PSNR: 23.424 (Best: 23.473 @epoch 14)
Forward: 130.58s

Saving...
Total: 131.56s

[Epoch 35]	Learning rate: 1.00e-4
[1600/2172]	[L1: 9.5787]	184.2+288.9s

Evaluation:
[Custom x4]	PSNR: 23.422 (Best: 23.473 @epoch 14)
Forward: 130.56s

Saving...
Total: 131.73s

[Epoch 36]	Learning rate: 1.00e-4
[1600/2172]	[L1: 9.5571]	184.2+288.8s

Evaluation:
[Custom x4]	PSNR: 23.421 (Best: 23.473 @epoch 14)
Forward: 130.53s

Saving...
Total: 131.51s

[Epoch 37]	Learning rate: 1.00e-4
[1600/2172]	[L1: 9.5238]	184.1+288.9s

Evaluation:
[Custom x4]	PSNR: 23.415 (Best: 23.473 @epoch 14)
Forward: 130.58s

Saving...
Total: 131.65s

[Epoch 38]	Learning rate: 1.00e-4
[1600/2172]	[L1: 9.5645]	184.3+288.9s

Evaluation:
[Custom x4]	PSNR: 23.404 (Best: 23.473 @epoch 14)
Forward: 130.65s

Saving...
Total: 131.84s

[Epoch 39]	Learning rate: 1.00e-4
[1600/2172]	[L1: 9.4946]	184.2+289.0s

Evaluation:
[Custom x4]	PSNR: 23.406 (Best: 23.473 @epoch 14)
Forward: 130.57s

Saving...
Total: 131.56s

[Epoch 40]	Learning rate: 1.00e-4
[1600/2172]	[L1: 9.5892]	184.3+288.8s

Evaluation:
[Custom x4]	PSNR: 23.419 (Best: 23.473 @epoch 14)
Forward: 130.55s

Saving...
Total: 131.74s

